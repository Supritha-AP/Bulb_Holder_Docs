

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 05 15:30:16 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	12F1572
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Version 2.40
    40                           ; Generated 04/07/2022 GMT
    41                           ; 
    42                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC12F1572 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0008                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     008C                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     0111                     	;# 
   117     0112                     	;# 
   118     0115                     	;# 
   119     0116                     	;# 
   120     0117                     	;# 
   121     0118                     	;# 
   122     0119                     	;# 
   123     011D                     	;# 
   124     011D                     	;# 
   125     018C                     	;# 
   126     0191                     	;# 
   127     0191                     	;# 
   128     0192                     	;# 
   129     0193                     	;# 
   130     0193                     	;# 
   131     0194                     	;# 
   132     0195                     	;# 
   133     0196                     	;# 
   134     0197                     	;# 
   135     0199                     	;# 
   136     019A                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019C                     	;# 
   140     019D                     	;# 
   141     019E                     	;# 
   142     019F                     	;# 
   143     020C                     	;# 
   144     028C                     	;# 
   145     030C                     	;# 
   146     038C                     	;# 
   147     0391                     	;# 
   148     0392                     	;# 
   149     0393                     	;# 
   150     0691                     	;# 
   151     0692                     	;# 
   152     0693                     	;# 
   153     0694                     	;# 
   154     0695                     	;# 
   155     0D8E                     	;# 
   156     0D8F                     	;# 
   157     0D90                     	;# 
   158     0D91                     	;# 
   159     0D91                     	;# 
   160     0D92                     	;# 
   161     0D93                     	;# 
   162     0D93                     	;# 
   163     0D94                     	;# 
   164     0D95                     	;# 
   165     0D95                     	;# 
   166     0D96                     	;# 
   167     0D97                     	;# 
   168     0D97                     	;# 
   169     0D98                     	;# 
   170     0D99                     	;# 
   171     0D99                     	;# 
   172     0D9A                     	;# 
   173     0D9B                     	;# 
   174     0D9C                     	;# 
   175     0D9C                     	;# 
   176     0D9D                     	;# 
   177     0D9D                     	;# 
   178     0D9E                     	;# 
   179     0D9F                     	;# 
   180     0DA0                     	;# 
   181     0DA1                     	;# 
   182     0DA1                     	;# 
   183     0DA2                     	;# 
   184     0DA3                     	;# 
   185     0DA3                     	;# 
   186     0DA4                     	;# 
   187     0DA5                     	;# 
   188     0DA5                     	;# 
   189     0DA6                     	;# 
   190     0DA7                     	;# 
   191     0DA7                     	;# 
   192     0DA8                     	;# 
   193     0DA9                     	;# 
   194     0DA9                     	;# 
   195     0DAA                     	;# 
   196     0DAB                     	;# 
   197     0DAC                     	;# 
   198     0DAC                     	;# 
   199     0DAD                     	;# 
   200     0DAD                     	;# 
   201     0DAE                     	;# 
   202     0DAF                     	;# 
   203     0DB0                     	;# 
   204     0DB1                     	;# 
   205     0DB1                     	;# 
   206     0DB2                     	;# 
   207     0DB3                     	;# 
   208     0DB3                     	;# 
   209     0DB4                     	;# 
   210     0DB5                     	;# 
   211     0DB5                     	;# 
   212     0DB6                     	;# 
   213     0DB7                     	;# 
   214     0DB7                     	;# 
   215     0DB8                     	;# 
   216     0DB9                     	;# 
   217     0DB9                     	;# 
   218     0DBA                     	;# 
   219     0DBB                     	;# 
   220     0DBC                     	;# 
   221     0DBC                     	;# 
   222     0DBD                     	;# 
   223     0DBD                     	;# 
   224     0DBE                     	;# 
   225     0DBF                     	;# 
   226     0DC0                     	;# 
   227     0FE4                     	;# 
   228     0FE5                     	;# 
   229     0FE6                     	;# 
   230     0FE7                     	;# 
   231     0FE8                     	;# 
   232     0FE8                     	;# 
   233     0FE9                     	;# 
   234     0FEA                     	;# 
   235     0FEA                     	;# 
   236     0FEB                     	;# 
   237     0FED                     	;# 
   238     0FEE                     	;# 
   239     0FEE                     	;# 
   240     0FEF                     	;# 
   241     0000                     	;# 
   242     0001                     	;# 
   243     0002                     	;# 
   244     0003                     	;# 
   245     0004                     	;# 
   246     0005                     	;# 
   247     0006                     	;# 
   248     0007                     	;# 
   249     0008                     	;# 
   250     0009                     	;# 
   251     000A                     	;# 
   252     000B                     	;# 
   253     000C                     	;# 
   254     0011                     	;# 
   255     0012                     	;# 
   256     0013                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     008C                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0095                     	;# 
   271     0096                     	;# 
   272     0097                     	;# 
   273     0098                     	;# 
   274     0099                     	;# 
   275     009A                     	;# 
   276     009B                     	;# 
   277     009B                     	;# 
   278     009C                     	;# 
   279     009D                     	;# 
   280     009E                     	;# 
   281     009F                     	;# 
   282     010C                     	;# 
   283     0111                     	;# 
   284     0112                     	;# 
   285     0115                     	;# 
   286     0116                     	;# 
   287     0117                     	;# 
   288     0118                     	;# 
   289     0119                     	;# 
   290     011D                     	;# 
   291     011D                     	;# 
   292     018C                     	;# 
   293     0191                     	;# 
   294     0191                     	;# 
   295     0192                     	;# 
   296     0193                     	;# 
   297     0193                     	;# 
   298     0194                     	;# 
   299     0195                     	;# 
   300     0196                     	;# 
   301     0197                     	;# 
   302     0199                     	;# 
   303     019A                     	;# 
   304     019B                     	;# 
   305     019B                     	;# 
   306     019C                     	;# 
   307     019D                     	;# 
   308     019E                     	;# 
   309     019F                     	;# 
   310     020C                     	;# 
   311     028C                     	;# 
   312     030C                     	;# 
   313     038C                     	;# 
   314     0391                     	;# 
   315     0392                     	;# 
   316     0393                     	;# 
   317     0691                     	;# 
   318     0692                     	;# 
   319     0693                     	;# 
   320     0694                     	;# 
   321     0695                     	;# 
   322     0D8E                     	;# 
   323     0D8F                     	;# 
   324     0D90                     	;# 
   325     0D91                     	;# 
   326     0D91                     	;# 
   327     0D92                     	;# 
   328     0D93                     	;# 
   329     0D93                     	;# 
   330     0D94                     	;# 
   331     0D95                     	;# 
   332     0D95                     	;# 
   333     0D96                     	;# 
   334     0D97                     	;# 
   335     0D97                     	;# 
   336     0D98                     	;# 
   337     0D99                     	;# 
   338     0D99                     	;# 
   339     0D9A                     	;# 
   340     0D9B                     	;# 
   341     0D9C                     	;# 
   342     0D9C                     	;# 
   343     0D9D                     	;# 
   344     0D9D                     	;# 
   345     0D9E                     	;# 
   346     0D9F                     	;# 
   347     0DA0                     	;# 
   348     0DA1                     	;# 
   349     0DA1                     	;# 
   350     0DA2                     	;# 
   351     0DA3                     	;# 
   352     0DA3                     	;# 
   353     0DA4                     	;# 
   354     0DA5                     	;# 
   355     0DA5                     	;# 
   356     0DA6                     	;# 
   357     0DA7                     	;# 
   358     0DA7                     	;# 
   359     0DA8                     	;# 
   360     0DA9                     	;# 
   361     0DA9                     	;# 
   362     0DAA                     	;# 
   363     0DAB                     	;# 
   364     0DAC                     	;# 
   365     0DAC                     	;# 
   366     0DAD                     	;# 
   367     0DAD                     	;# 
   368     0DAE                     	;# 
   369     0DAF                     	;# 
   370     0DB0                     	;# 
   371     0DB1                     	;# 
   372     0DB1                     	;# 
   373     0DB2                     	;# 
   374     0DB3                     	;# 
   375     0DB3                     	;# 
   376     0DB4                     	;# 
   377     0DB5                     	;# 
   378     0DB5                     	;# 
   379     0DB6                     	;# 
   380     0DB7                     	;# 
   381     0DB7                     	;# 
   382     0DB8                     	;# 
   383     0DB9                     	;# 
   384     0DB9                     	;# 
   385     0DBA                     	;# 
   386     0DBB                     	;# 
   387     0DBC                     	;# 
   388     0DBC                     	;# 
   389     0DBD                     	;# 
   390     0DBD                     	;# 
   391     0DBE                     	;# 
   392     0DBF                     	;# 
   393     0DC0                     	;# 
   394     0FE4                     	;# 
   395     0FE5                     	;# 
   396     0FE6                     	;# 
   397     0FE7                     	;# 
   398     0FE8                     	;# 
   399     0FE8                     	;# 
   400     0FE9                     	;# 
   401     0FEA                     	;# 
   402     0FEA                     	;# 
   403     0FEB                     	;# 
   404     0FED                     	;# 
   405     0FEE                     	;# 
   406     0FEE                     	;# 
   407     0FEF                     	;# 
   408     0000                     	;# 
   409     0001                     	;# 
   410     0002                     	;# 
   411     0003                     	;# 
   412     0004                     	;# 
   413     0005                     	;# 
   414     0006                     	;# 
   415     0007                     	;# 
   416     0008                     	;# 
   417     0009                     	;# 
   418     000A                     	;# 
   419     000B                     	;# 
   420     000C                     	;# 
   421     0011                     	;# 
   422     0012                     	;# 
   423     0013                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0016                     	;# 
   427     0017                     	;# 
   428     0018                     	;# 
   429     0019                     	;# 
   430     001A                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     008C                     	;# 
   434     0091                     	;# 
   435     0092                     	;# 
   436     0093                     	;# 
   437     0095                     	;# 
   438     0096                     	;# 
   439     0097                     	;# 
   440     0098                     	;# 
   441     0099                     	;# 
   442     009A                     	;# 
   443     009B                     	;# 
   444     009B                     	;# 
   445     009C                     	;# 
   446     009D                     	;# 
   447     009E                     	;# 
   448     009F                     	;# 
   449     010C                     	;# 
   450     0111                     	;# 
   451     0112                     	;# 
   452     0115                     	;# 
   453     0116                     	;# 
   454     0117                     	;# 
   455     0118                     	;# 
   456     0119                     	;# 
   457     011D                     	;# 
   458     011D                     	;# 
   459     018C                     	;# 
   460     0191                     	;# 
   461     0191                     	;# 
   462     0192                     	;# 
   463     0193                     	;# 
   464     0193                     	;# 
   465     0194                     	;# 
   466     0195                     	;# 
   467     0196                     	;# 
   468     0197                     	;# 
   469     0199                     	;# 
   470     019A                     	;# 
   471     019B                     	;# 
   472     019B                     	;# 
   473     019C                     	;# 
   474     019D                     	;# 
   475     019E                     	;# 
   476     019F                     	;# 
   477     020C                     	;# 
   478     028C                     	;# 
   479     030C                     	;# 
   480     038C                     	;# 
   481     0391                     	;# 
   482     0392                     	;# 
   483     0393                     	;# 
   484     0691                     	;# 
   485     0692                     	;# 
   486     0693                     	;# 
   487     0694                     	;# 
   488     0695                     	;# 
   489     0D8E                     	;# 
   490     0D8F                     	;# 
   491     0D90                     	;# 
   492     0D91                     	;# 
   493     0D91                     	;# 
   494     0D92                     	;# 
   495     0D93                     	;# 
   496     0D93                     	;# 
   497     0D94                     	;# 
   498     0D95                     	;# 
   499     0D95                     	;# 
   500     0D96                     	;# 
   501     0D97                     	;# 
   502     0D97                     	;# 
   503     0D98                     	;# 
   504     0D99                     	;# 
   505     0D99                     	;# 
   506     0D9A                     	;# 
   507     0D9B                     	;# 
   508     0D9C                     	;# 
   509     0D9C                     	;# 
   510     0D9D                     	;# 
   511     0D9D                     	;# 
   512     0D9E                     	;# 
   513     0D9F                     	;# 
   514     0DA0                     	;# 
   515     0DA1                     	;# 
   516     0DA1                     	;# 
   517     0DA2                     	;# 
   518     0DA3                     	;# 
   519     0DA3                     	;# 
   520     0DA4                     	;# 
   521     0DA5                     	;# 
   522     0DA5                     	;# 
   523     0DA6                     	;# 
   524     0DA7                     	;# 
   525     0DA7                     	;# 
   526     0DA8                     	;# 
   527     0DA9                     	;# 
   528     0DA9                     	;# 
   529     0DAA                     	;# 
   530     0DAB                     	;# 
   531     0DAC                     	;# 
   532     0DAC                     	;# 
   533     0DAD                     	;# 
   534     0DAD                     	;# 
   535     0DAE                     	;# 
   536     0DAF                     	;# 
   537     0DB0                     	;# 
   538     0DB1                     	;# 
   539     0DB1                     	;# 
   540     0DB2                     	;# 
   541     0DB3                     	;# 
   542     0DB3                     	;# 
   543     0DB4                     	;# 
   544     0DB5                     	;# 
   545     0DB5                     	;# 
   546     0DB6                     	;# 
   547     0DB7                     	;# 
   548     0DB7                     	;# 
   549     0DB8                     	;# 
   550     0DB9                     	;# 
   551     0DB9                     	;# 
   552     0DBA                     	;# 
   553     0DBB                     	;# 
   554     0DBC                     	;# 
   555     0DBC                     	;# 
   556     0DBD                     	;# 
   557     0DBD                     	;# 
   558     0DBE                     	;# 
   559     0DBF                     	;# 
   560     0DC0                     	;# 
   561     0FE4                     	;# 
   562     0FE5                     	;# 
   563     0FE6                     	;# 
   564     0FE7                     	;# 
   565     0FE8                     	;# 
   566     0FE8                     	;# 
   567     0FE9                     	;# 
   568     0FEA                     	;# 
   569     0FEA                     	;# 
   570     0FEB                     	;# 
   571     0FED                     	;# 
   572     0FEE                     	;# 
   573     0FEE                     	;# 
   574     0FEF                     	;# 
   575     0000                     	;# 
   576     0001                     	;# 
   577     0002                     	;# 
   578     0003                     	;# 
   579     0004                     	;# 
   580     0005                     	;# 
   581     0006                     	;# 
   582     0007                     	;# 
   583     0008                     	;# 
   584     0009                     	;# 
   585     000A                     	;# 
   586     000B                     	;# 
   587     000C                     	;# 
   588     0011                     	;# 
   589     0012                     	;# 
   590     0013                     	;# 
   591     0015                     	;# 
   592     0016                     	;# 
   593     0016                     	;# 
   594     0017                     	;# 
   595     0018                     	;# 
   596     0019                     	;# 
   597     001A                     	;# 
   598     001B                     	;# 
   599     001C                     	;# 
   600     008C                     	;# 
   601     0091                     	;# 
   602     0092                     	;# 
   603     0093                     	;# 
   604     0095                     	;# 
   605     0096                     	;# 
   606     0097                     	;# 
   607     0098                     	;# 
   608     0099                     	;# 
   609     009A                     	;# 
   610     009B                     	;# 
   611     009B                     	;# 
   612     009C                     	;# 
   613     009D                     	;# 
   614     009E                     	;# 
   615     009F                     	;# 
   616     010C                     	;# 
   617     0111                     	;# 
   618     0112                     	;# 
   619     0115                     	;# 
   620     0116                     	;# 
   621     0117                     	;# 
   622     0118                     	;# 
   623     0119                     	;# 
   624     011D                     	;# 
   625     011D                     	;# 
   626     018C                     	;# 
   627     0191                     	;# 
   628     0191                     	;# 
   629     0192                     	;# 
   630     0193                     	;# 
   631     0193                     	;# 
   632     0194                     	;# 
   633     0195                     	;# 
   634     0196                     	;# 
   635     0197                     	;# 
   636     0199                     	;# 
   637     019A                     	;# 
   638     019B                     	;# 
   639     019B                     	;# 
   640     019C                     	;# 
   641     019D                     	;# 
   642     019E                     	;# 
   643     019F                     	;# 
   644     020C                     	;# 
   645     028C                     	;# 
   646     030C                     	;# 
   647     038C                     	;# 
   648     0391                     	;# 
   649     0392                     	;# 
   650     0393                     	;# 
   651     0691                     	;# 
   652     0692                     	;# 
   653     0693                     	;# 
   654     0694                     	;# 
   655     0695                     	;# 
   656     0D8E                     	;# 
   657     0D8F                     	;# 
   658     0D90                     	;# 
   659     0D91                     	;# 
   660     0D91                     	;# 
   661     0D92                     	;# 
   662     0D93                     	;# 
   663     0D93                     	;# 
   664     0D94                     	;# 
   665     0D95                     	;# 
   666     0D95                     	;# 
   667     0D96                     	;# 
   668     0D97                     	;# 
   669     0D97                     	;# 
   670     0D98                     	;# 
   671     0D99                     	;# 
   672     0D99                     	;# 
   673     0D9A                     	;# 
   674     0D9B                     	;# 
   675     0D9C                     	;# 
   676     0D9C                     	;# 
   677     0D9D                     	;# 
   678     0D9D                     	;# 
   679     0D9E                     	;# 
   680     0D9F                     	;# 
   681     0DA0                     	;# 
   682     0DA1                     	;# 
   683     0DA1                     	;# 
   684     0DA2                     	;# 
   685     0DA3                     	;# 
   686     0DA3                     	;# 
   687     0DA4                     	;# 
   688     0DA5                     	;# 
   689     0DA5                     	;# 
   690     0DA6                     	;# 
   691     0DA7                     	;# 
   692     0DA7                     	;# 
   693     0DA8                     	;# 
   694     0DA9                     	;# 
   695     0DA9                     	;# 
   696     0DAA                     	;# 
   697     0DAB                     	;# 
   698     0DAC                     	;# 
   699     0DAC                     	;# 
   700     0DAD                     	;# 
   701     0DAD                     	;# 
   702     0DAE                     	;# 
   703     0DAF                     	;# 
   704     0DB0                     	;# 
   705     0DB1                     	;# 
   706     0DB1                     	;# 
   707     0DB2                     	;# 
   708     0DB3                     	;# 
   709     0DB3                     	;# 
   710     0DB4                     	;# 
   711     0DB5                     	;# 
   712     0DB5                     	;# 
   713     0DB6                     	;# 
   714     0DB7                     	;# 
   715     0DB7                     	;# 
   716     0DB8                     	;# 
   717     0DB9                     	;# 
   718     0DB9                     	;# 
   719     0DBA                     	;# 
   720     0DBB                     	;# 
   721     0DBC                     	;# 
   722     0DBC                     	;# 
   723     0DBD                     	;# 
   724     0DBD                     	;# 
   725     0DBE                     	;# 
   726     0DBF                     	;# 
   727     0DC0                     	;# 
   728     0FE4                     	;# 
   729     0FE5                     	;# 
   730     0FE6                     	;# 
   731     0FE7                     	;# 
   732     0FE8                     	;# 
   733     0FE8                     	;# 
   734     0FE9                     	;# 
   735     0FEA                     	;# 
   736     0FEA                     	;# 
   737     0FEB                     	;# 
   738     0FED                     	;# 
   739     0FEE                     	;# 
   740     0FEE                     	;# 
   741     0FEF                     	;# 
   742     0000                     	;# 
   743     0001                     	;# 
   744     0002                     	;# 
   745     0003                     	;# 
   746     0004                     	;# 
   747     0005                     	;# 
   748     0006                     	;# 
   749     0007                     	;# 
   750     0008                     	;# 
   751     0009                     	;# 
   752     000A                     	;# 
   753     000B                     	;# 
   754     000C                     	;# 
   755     0011                     	;# 
   756     0012                     	;# 
   757     0013                     	;# 
   758     0015                     	;# 
   759     0016                     	;# 
   760     0016                     	;# 
   761     0017                     	;# 
   762     0018                     	;# 
   763     0019                     	;# 
   764     001A                     	;# 
   765     001B                     	;# 
   766     001C                     	;# 
   767     008C                     	;# 
   768     0091                     	;# 
   769     0092                     	;# 
   770     0093                     	;# 
   771     0095                     	;# 
   772     0096                     	;# 
   773     0097                     	;# 
   774     0098                     	;# 
   775     0099                     	;# 
   776     009A                     	;# 
   777     009B                     	;# 
   778     009B                     	;# 
   779     009C                     	;# 
   780     009D                     	;# 
   781     009E                     	;# 
   782     009F                     	;# 
   783     010C                     	;# 
   784     0111                     	;# 
   785     0112                     	;# 
   786     0115                     	;# 
   787     0116                     	;# 
   788     0117                     	;# 
   789     0118                     	;# 
   790     0119                     	;# 
   791     011D                     	;# 
   792     011D                     	;# 
   793     018C                     	;# 
   794     0191                     	;# 
   795     0191                     	;# 
   796     0192                     	;# 
   797     0193                     	;# 
   798     0193                     	;# 
   799     0194                     	;# 
   800     0195                     	;# 
   801     0196                     	;# 
   802     0197                     	;# 
   803     0199                     	;# 
   804     019A                     	;# 
   805     019B                     	;# 
   806     019B                     	;# 
   807     019C                     	;# 
   808     019D                     	;# 
   809     019E                     	;# 
   810     019F                     	;# 
   811     020C                     	;# 
   812     028C                     	;# 
   813     030C                     	;# 
   814     038C                     	;# 
   815     0391                     	;# 
   816     0392                     	;# 
   817     0393                     	;# 
   818     0691                     	;# 
   819     0692                     	;# 
   820     0693                     	;# 
   821     0694                     	;# 
   822     0695                     	;# 
   823     0D8E                     	;# 
   824     0D8F                     	;# 
   825     0D90                     	;# 
   826     0D91                     	;# 
   827     0D91                     	;# 
   828     0D92                     	;# 
   829     0D93                     	;# 
   830     0D93                     	;# 
   831     0D94                     	;# 
   832     0D95                     	;# 
   833     0D95                     	;# 
   834     0D96                     	;# 
   835     0D97                     	;# 
   836     0D97                     	;# 
   837     0D98                     	;# 
   838     0D99                     	;# 
   839     0D99                     	;# 
   840     0D9A                     	;# 
   841     0D9B                     	;# 
   842     0D9C                     	;# 
   843     0D9C                     	;# 
   844     0D9D                     	;# 
   845     0D9D                     	;# 
   846     0D9E                     	;# 
   847     0D9F                     	;# 
   848     0DA0                     	;# 
   849     0DA1                     	;# 
   850     0DA1                     	;# 
   851     0DA2                     	;# 
   852     0DA3                     	;# 
   853     0DA3                     	;# 
   854     0DA4                     	;# 
   855     0DA5                     	;# 
   856     0DA5                     	;# 
   857     0DA6                     	;# 
   858     0DA7                     	;# 
   859     0DA7                     	;# 
   860     0DA8                     	;# 
   861     0DA9                     	;# 
   862     0DA9                     	;# 
   863     0DAA                     	;# 
   864     0DAB                     	;# 
   865     0DAC                     	;# 
   866     0DAC                     	;# 
   867     0DAD                     	;# 
   868     0DAD                     	;# 
   869     0DAE                     	;# 
   870     0DAF                     	;# 
   871     0DB0                     	;# 
   872     0DB1                     	;# 
   873     0DB1                     	;# 
   874     0DB2                     	;# 
   875     0DB3                     	;# 
   876     0DB3                     	;# 
   877     0DB4                     	;# 
   878     0DB5                     	;# 
   879     0DB5                     	;# 
   880     0DB6                     	;# 
   881     0DB7                     	;# 
   882     0DB7                     	;# 
   883     0DB8                     	;# 
   884     0DB9                     	;# 
   885     0DB9                     	;# 
   886     0DBA                     	;# 
   887     0DBB                     	;# 
   888     0DBC                     	;# 
   889     0DBC                     	;# 
   890     0DBD                     	;# 
   891     0DBD                     	;# 
   892     0DBE                     	;# 
   893     0DBF                     	;# 
   894     0DC0                     	;# 
   895     0FE4                     	;# 
   896     0FE5                     	;# 
   897     0FE6                     	;# 
   898     0FE7                     	;# 
   899     0FE8                     	;# 
   900     0FE8                     	;# 
   901     0FE9                     	;# 
   902     0FEA                     	;# 
   903     0FEA                     	;# 
   904     0FEB                     	;# 
   905     0FED                     	;# 
   906     0FEE                     	;# 
   907     0FEE                     	;# 
   908     0FEF                     	;# 
   909     0000                     	;# 
   910     0001                     	;# 
   911     0002                     	;# 
   912     0003                     	;# 
   913     0004                     	;# 
   914     0005                     	;# 
   915     0006                     	;# 
   916     0007                     	;# 
   917     0008                     	;# 
   918     0009                     	;# 
   919     000A                     	;# 
   920     000B                     	;# 
   921     000C                     	;# 
   922     0011                     	;# 
   923     0012                     	;# 
   924     0013                     	;# 
   925     0015                     	;# 
   926     0016                     	;# 
   927     0016                     	;# 
   928     0017                     	;# 
   929     0018                     	;# 
   930     0019                     	;# 
   931     001A                     	;# 
   932     001B                     	;# 
   933     001C                     	;# 
   934     008C                     	;# 
   935     0091                     	;# 
   936     0092                     	;# 
   937     0093                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     009F                     	;# 
   950     010C                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0115                     	;# 
   954     0116                     	;# 
   955     0117                     	;# 
   956     0118                     	;# 
   957     0119                     	;# 
   958     011D                     	;# 
   959     011D                     	;# 
   960     018C                     	;# 
   961     0191                     	;# 
   962     0191                     	;# 
   963     0192                     	;# 
   964     0193                     	;# 
   965     0193                     	;# 
   966     0194                     	;# 
   967     0195                     	;# 
   968     0196                     	;# 
   969     0197                     	;# 
   970     0199                     	;# 
   971     019A                     	;# 
   972     019B                     	;# 
   973     019B                     	;# 
   974     019C                     	;# 
   975     019D                     	;# 
   976     019E                     	;# 
   977     019F                     	;# 
   978     020C                     	;# 
   979     028C                     	;# 
   980     030C                     	;# 
   981     038C                     	;# 
   982     0391                     	;# 
   983     0392                     	;# 
   984     0393                     	;# 
   985     0691                     	;# 
   986     0692                     	;# 
   987     0693                     	;# 
   988     0694                     	;# 
   989     0695                     	;# 
   990     0D8E                     	;# 
   991     0D8F                     	;# 
   992     0D90                     	;# 
   993     0D91                     	;# 
   994     0D91                     	;# 
   995     0D92                     	;# 
   996     0D93                     	;# 
   997     0D93                     	;# 
   998     0D94                     	;# 
   999     0D95                     	;# 
  1000     0D95                     	;# 
  1001     0D96                     	;# 
  1002     0D97                     	;# 
  1003     0D97                     	;# 
  1004     0D98                     	;# 
  1005     0D99                     	;# 
  1006     0D99                     	;# 
  1007     0D9A                     	;# 
  1008     0D9B                     	;# 
  1009     0D9C                     	;# 
  1010     0D9C                     	;# 
  1011     0D9D                     	;# 
  1012     0D9D                     	;# 
  1013     0D9E                     	;# 
  1014     0D9F                     	;# 
  1015     0DA0                     	;# 
  1016     0DA1                     	;# 
  1017     0DA1                     	;# 
  1018     0DA2                     	;# 
  1019     0DA3                     	;# 
  1020     0DA3                     	;# 
  1021     0DA4                     	;# 
  1022     0DA5                     	;# 
  1023     0DA5                     	;# 
  1024     0DA6                     	;# 
  1025     0DA7                     	;# 
  1026     0DA7                     	;# 
  1027     0DA8                     	;# 
  1028     0DA9                     	;# 
  1029     0DA9                     	;# 
  1030     0DAA                     	;# 
  1031     0DAB                     	;# 
  1032     0DAC                     	;# 
  1033     0DAC                     	;# 
  1034     0DAD                     	;# 
  1035     0DAD                     	;# 
  1036     0DAE                     	;# 
  1037     0DAF                     	;# 
  1038     0DB0                     	;# 
  1039     0DB1                     	;# 
  1040     0DB1                     	;# 
  1041     0DB2                     	;# 
  1042     0DB3                     	;# 
  1043     0DB3                     	;# 
  1044     0DB4                     	;# 
  1045     0DB5                     	;# 
  1046     0DB5                     	;# 
  1047     0DB6                     	;# 
  1048     0DB7                     	;# 
  1049     0DB7                     	;# 
  1050     0DB8                     	;# 
  1051     0DB9                     	;# 
  1052     0DB9                     	;# 
  1053     0DBA                     	;# 
  1054     0DBB                     	;# 
  1055     0DBC                     	;# 
  1056     0DBC                     	;# 
  1057     0DBD                     	;# 
  1058     0DBD                     	;# 
  1059     0DBE                     	;# 
  1060     0DBF                     	;# 
  1061     0DC0                     	;# 
  1062     0FE4                     	;# 
  1063     0FE5                     	;# 
  1064     0FE6                     	;# 
  1065     0FE7                     	;# 
  1066     0FE8                     	;# 
  1067     0FE8                     	;# 
  1068     0FE9                     	;# 
  1069     0FEA                     	;# 
  1070     0FEA                     	;# 
  1071     0FEB                     	;# 
  1072     0FED                     	;# 
  1073     0FEE                     	;# 
  1074     0FEE                     	;# 
  1075     0FEF                     	;# 
  1076     0000                     	;# 
  1077     0001                     	;# 
  1078     0002                     	;# 
  1079     0003                     	;# 
  1080     0004                     	;# 
  1081     0005                     	;# 
  1082     0006                     	;# 
  1083     0007                     	;# 
  1084     0008                     	;# 
  1085     0009                     	;# 
  1086     000A                     	;# 
  1087     000B                     	;# 
  1088     000C                     	;# 
  1089     0011                     	;# 
  1090     0012                     	;# 
  1091     0013                     	;# 
  1092     0015                     	;# 
  1093     0016                     	;# 
  1094     0016                     	;# 
  1095     0017                     	;# 
  1096     0018                     	;# 
  1097     0019                     	;# 
  1098     001A                     	;# 
  1099     001B                     	;# 
  1100     001C                     	;# 
  1101     008C                     	;# 
  1102     0091                     	;# 
  1103     0092                     	;# 
  1104     0093                     	;# 
  1105     0095                     	;# 
  1106     0096                     	;# 
  1107     0097                     	;# 
  1108     0098                     	;# 
  1109     0099                     	;# 
  1110     009A                     	;# 
  1111     009B                     	;# 
  1112     009B                     	;# 
  1113     009C                     	;# 
  1114     009D                     	;# 
  1115     009E                     	;# 
  1116     009F                     	;# 
  1117     010C                     	;# 
  1118     0111                     	;# 
  1119     0112                     	;# 
  1120     0115                     	;# 
  1121     0116                     	;# 
  1122     0117                     	;# 
  1123     0118                     	;# 
  1124     0119                     	;# 
  1125     011D                     	;# 
  1126     011D                     	;# 
  1127     018C                     	;# 
  1128     0191                     	;# 
  1129     0191                     	;# 
  1130     0192                     	;# 
  1131     0193                     	;# 
  1132     0193                     	;# 
  1133     0194                     	;# 
  1134     0195                     	;# 
  1135     0196                     	;# 
  1136     0197                     	;# 
  1137     0199                     	;# 
  1138     019A                     	;# 
  1139     019B                     	;# 
  1140     019B                     	;# 
  1141     019C                     	;# 
  1142     019D                     	;# 
  1143     019E                     	;# 
  1144     019F                     	;# 
  1145     020C                     	;# 
  1146     028C                     	;# 
  1147     030C                     	;# 
  1148     038C                     	;# 
  1149     0391                     	;# 
  1150     0392                     	;# 
  1151     0393                     	;# 
  1152     0691                     	;# 
  1153     0692                     	;# 
  1154     0693                     	;# 
  1155     0694                     	;# 
  1156     0695                     	;# 
  1157     0D8E                     	;# 
  1158     0D8F                     	;# 
  1159     0D90                     	;# 
  1160     0D91                     	;# 
  1161     0D91                     	;# 
  1162     0D92                     	;# 
  1163     0D93                     	;# 
  1164     0D93                     	;# 
  1165     0D94                     	;# 
  1166     0D95                     	;# 
  1167     0D95                     	;# 
  1168     0D96                     	;# 
  1169     0D97                     	;# 
  1170     0D97                     	;# 
  1171     0D98                     	;# 
  1172     0D99                     	;# 
  1173     0D99                     	;# 
  1174     0D9A                     	;# 
  1175     0D9B                     	;# 
  1176     0D9C                     	;# 
  1177     0D9C                     	;# 
  1178     0D9D                     	;# 
  1179     0D9D                     	;# 
  1180     0D9E                     	;# 
  1181     0D9F                     	;# 
  1182     0DA0                     	;# 
  1183     0DA1                     	;# 
  1184     0DA1                     	;# 
  1185     0DA2                     	;# 
  1186     0DA3                     	;# 
  1187     0DA3                     	;# 
  1188     0DA4                     	;# 
  1189     0DA5                     	;# 
  1190     0DA5                     	;# 
  1191     0DA6                     	;# 
  1192     0DA7                     	;# 
  1193     0DA7                     	;# 
  1194     0DA8                     	;# 
  1195     0DA9                     	;# 
  1196     0DA9                     	;# 
  1197     0DAA                     	;# 
  1198     0DAB                     	;# 
  1199     0DAC                     	;# 
  1200     0DAC                     	;# 
  1201     0DAD                     	;# 
  1202     0DAD                     	;# 
  1203     0DAE                     	;# 
  1204     0DAF                     	;# 
  1205     0DB0                     	;# 
  1206     0DB1                     	;# 
  1207     0DB1                     	;# 
  1208     0DB2                     	;# 
  1209     0DB3                     	;# 
  1210     0DB3                     	;# 
  1211     0DB4                     	;# 
  1212     0DB5                     	;# 
  1213     0DB5                     	;# 
  1214     0DB6                     	;# 
  1215     0DB7                     	;# 
  1216     0DB7                     	;# 
  1217     0DB8                     	;# 
  1218     0DB9                     	;# 
  1219     0DB9                     	;# 
  1220     0DBA                     	;# 
  1221     0DBB                     	;# 
  1222     0DBC                     	;# 
  1223     0DBC                     	;# 
  1224     0DBD                     	;# 
  1225     0DBD                     	;# 
  1226     0DBE                     	;# 
  1227     0DBF                     	;# 
  1228     0DC0                     	;# 
  1229     0FE4                     	;# 
  1230     0FE5                     	;# 
  1231     0FE6                     	;# 
  1232     0FE7                     	;# 
  1233     0FE8                     	;# 
  1234     0FE8                     	;# 
  1235     0FE9                     	;# 
  1236     0FEA                     	;# 
  1237     0FEA                     	;# 
  1238     0FEB                     	;# 
  1239     0FED                     	;# 
  1240     0FEE                     	;# 
  1241     0FEE                     	;# 
  1242     0FEF                     	;# 
  1243                           
  1244                           	psect	idataBANK0
  1245     02F6                     __pidataBANK0:
  1246                           
  1247                           ;initializer for _time_EEPROM_WRITE_count
  1248     02F6  340A               	retlw	10
  1249     02F7  3400               	retlw	0
  1250                           
  1251                           ;initializer for _time_Scanning_Period_count
  1252     02F8  34FA               	retlw	250
  1253     02F9  3400               	retlw	0
  1254                           
  1255                           	psect	nvBANK0
  1256     0052                     __pnvBANK0:
  1257     0052                     _IOCAF0_InterruptHandler:
  1258     0052                     	ds	2
  1259     0054                     _timer0ReloadVal:
  1260     0054                     	ds	1
  1261     000B                     _INTCON	set	11
  1262     0015                     _TMR0	set	21
  1263     000B                     _INTCONbits	set	11
  1264     005F                     _GIE	set	95
  1265     0095                     _OPTION_REG	set	149
  1266     0095                     _OPTION_REGbits	set	149
  1267     008C                     _TRISA	set	140
  1268     0097                     _WDTCON	set	151
  1269     0098                     _OSCTUNE	set	152
  1270     0099                     _OSCCON	set	153
  1271     010C                     _LATAbits	set	268
  1272     011D                     _APFCON	set	285
  1273     010C                     _LATA	set	268
  1274     0116                     _BORCON	set	278
  1275     0191                     _PMADR	set	401
  1276     0193                     _PMDAT	set	403
  1277     0196                     _PMCON2	set	406
  1278     0195                     _PMCON1	set	405
  1279     0194                     _PMDATH	set	404
  1280     018C                     _ANSELA	set	396
  1281     0CAA                     _WREN	set	3242
  1282     0CA9                     _WR	set	3241
  1283     0CA8                     _RD	set	3240
  1284     020C                     _WPUA	set	524
  1285     028C                     _ODCONA	set	652
  1286     030C                     _SLRCONA	set	780
  1287     0391                     _IOCAPbits	set	913
  1288     0392                     _IOCANbits	set	914
  1289     0393                     _IOCAFbits	set	915
  1290     038C                     _INLVLA	set	908
  1291                           
  1292                           	psect	cinit
  1293     0020                     start_initialization:	
  1294                           ; #config settings
  1295                           
  1296     0020                     __initialization:
  1297                           
  1298                           ; Initialize objects allocated to BANK0
  1299     0020  3182  22F6  3180   	fcall	__pidataBANK0	;fetch initializer
  1300     0023  00CE               	movwf	__pdataBANK0& (0+127)
  1301     0024  3182  22F7  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1302     0027  00CF               	movwf	(__pdataBANK0+1)& (0+127)
  1303     0028  3182  22F8  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1304     002B  00D0               	movwf	(__pdataBANK0+2)& (0+127)
  1305     002C  3182  22F9  3180   	fcall	__pidataBANK0+3	;fetch initializer
  1306     002F  00D1               	movwf	(__pdataBANK0+3)& (0+127)
  1307                           
  1308                           ; Clear objects allocated to BANK0
  1309     0030  3038               	movlw	low __pbssBANK0
  1310     0031  0084               	movwf	4
  1311     0032  3000               	movlw	high __pbssBANK0
  1312     0033  0085               	movwf	5
  1313     0034  3016               	movlw	22
  1314     0035  3182  22EA  3180   	fcall	clear_ram0
  1315     0038                     end_of_initialization:	
  1316                           ;End of C runtime variable initialization code
  1317                           
  1318     0038                     __end_of__initialization:
  1319     0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1320     0039  0020               	movlb	0
  1321     003A  2961               	ljmp	_main	;jump to C main() function
  1322                           
  1323                           	psect	bssBANK0
  1324     0038                     __pbssBANK0:
  1325     0038                     _V_Freequency_u32:
  1326     0038                     	ds	4
  1327     003C                     _V_FreequencyCounter_u32:
  1328     003C                     	ds	4
  1329     0040                     _V_COUNTER_1ms:
  1330     0040                     	ds	4
  1331     0044                     _SaveInt:
  1332     0044                     	ds	1
  1333     0045                     _Flag_FreCounter:
  1334     0045                     	ds	1
  1335     0046                     _time_EEPROM_WRITE_Period:
  1336     0046                     	ds	4
  1337     004A                     _time_Scanning_Period:
  1338     004A                     	ds	4
  1339                           
  1340                           	psect	dataBANK0
  1341     004E                     __pdataBANK0:
  1342     004E                     _time_EEPROM_WRITE_count:
  1343     004E                     	ds	2
  1344     0050                     _time_Scanning_Period_count:
  1345     0050                     	ds	2
  1346                           
  1347                           	psect	clrtext
  1348     02EA                     clear_ram0:	
  1349                           ;	Called with FSR0 containing the base address, and
  1350                           ;	WREG with the size to clear
  1351                           
  1352     02EA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1353     02EB                     clrloop0:
  1354     02EB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1355     02EC  3101               	addfsr 0,1
  1356     02ED  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1357     02EE  2AEB               	goto	clrloop0	;have we reached the end yet?
  1358     02EF  3400               	retlw	0	;all done for this memory range, return
  1359                           
  1360                           	psect	cstackCOMMON
  1361     0070                     __pcstackCOMMON:
  1362     0070                     ?_PIN_MANAGER_Initialize:
  1363     0070                     ?_OSCILLATOR_Initialize:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366     0070                     ??_OSCILLATOR_Initialize:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369     0070                     ?_WDT_Initialize:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372     0070                     ??_WDT_Initialize:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375     0070                     ?_TMR0_Initialize:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378     0070                     ??_TMR0_Initialize:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381     0070                     ?_IOCAF0_SetInterruptHandler:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384     0070                     ?_IOCAF0_DefaultInterruptHandler:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387     0070                     ??_IOCAF0_DefaultInterruptHandler:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390     0070                     ?_IOCAF0_ISR:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393     0070                     ??_IOCAF0_ISR:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396     0070                     ?_old_light_status:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399     0070                     ?_Sensing_Receiver:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402     0070                     ?_Sensing_Validation:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405     0070                     ??_Sensing_Validation:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408     0070                     ?_LIGHT_Trigger:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411     0070                     ??_LIGHT_Trigger:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     0070                     ?_Read_FLASH:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     0070                     ?_Write_FLASH:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     0070                     ??_Write_FLASH:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423     0070                     ?_Unlock_FLASH:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426     0070                     ??_Unlock_FLASH:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429     0070                     ?_SYSTEM_Initialize:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432     0070                     ?_PIN_MANAGER_IOC:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435     0070                     ??_PIN_MANAGER_IOC:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438     0070                     ?_TMR0_ISR:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441     0070                     ??_TMR0_ISR:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444     0070                     ?_INTERRUPT_InterruptManager:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447     0070                     ??_INTERRUPT_InterruptManager:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0070                     ?_main:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453     0070                     ?_get_TIMER0Status:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456     0070                     LIGHT_Trigger@Status:	
  1457                           ; 4 bytes @ 0x0
  1458                           
  1459     0070                     IOCAF0_SetInterruptHandler@InterruptHandler:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462     0070                     Read_FLASH@address:	
  1463                           ; 2 bytes @ 0x0
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x0
  1467     0070                     	ds	2
  1468     0072                     ??_PIN_MANAGER_Initialize:
  1469     0072                     ??_IOCAF0_SetInterruptHandler:	
  1470                           ; 1 bytes @ 0x2
  1471                           
  1472     0072                     ??_Read_FLASH:	
  1473                           ; 1 bytes @ 0x2
  1474                           
  1475     0072                     ??_SYSTEM_Initialize:	
  1476                           ; 1 bytes @ 0x2
  1477                           
  1478     0072                     ?_ReadWrite_HEFlash:	
  1479                           ; 1 bytes @ 0x2
  1480                           
  1481     0072                     ReadWrite_HEFlash@data:	
  1482                           ; 2 bytes @ 0x2
  1483                           
  1484                           
  1485                           ; 1 bytes @ 0x2
  1486     0072                     	ds	1
  1487     0073                     ReadWrite_HEFlash@rowstartaddr:
  1488                           
  1489                           ; 2 bytes @ 0x3
  1490     0073                     	ds	1
  1491     0074                     ??_get_TIMER0Status:
  1492     0074                     ?_get_Delay_Time:	
  1493                           ; 1 bytes @ 0x4
  1494                           
  1495                           
  1496                           ; 4 bytes @ 0x4
  1497     0074                     	ds	1
  1498     0075                     ??_ReadWrite_HEFlash:
  1499                           
  1500                           ; 1 bytes @ 0x5
  1501     0075                     	ds	2
  1502     0077                     ReadWrite_HEFlash@addr:
  1503                           
  1504                           ; 2 bytes @ 0x7
  1505     0077                     	ds	1
  1506     0078                     ?_get_DelayStatus:
  1507     0078                     get_DelayStatus@v_TimeDelay_u16r:	
  1508                           ; 1 bytes @ 0x8
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0x8
  1512     0078                     	ds	1
  1513     0079                     ReadWrite_HEFlash@rw:
  1514                           
  1515                           ; 1 bytes @ 0x9
  1516     0079                     	ds	1
  1517     007A                     ??_get_DelayStatus:
  1518     007A                     ReadWrite_HEFlash@cnt:	
  1519                           ; 1 bytes @ 0xA
  1520                           
  1521                           
  1522                           ; 1 bytes @ 0xA
  1523     007A                     	ds	1
  1524     007B                     ??_old_light_status:
  1525     007B                     old_light_status@V_light_status_on:	
  1526                           ; 1 bytes @ 0xB
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0xB
  1530     007B                     	ds	3
  1531     007E                     ??_Sensing_Receiver:
  1532     007E                     ??_main:	
  1533                           ; 1 bytes @ 0xE
  1534                           
  1535                           
  1536                           	psect	cstackBANK0
  1537     0020                     __pcstackBANK0:	
  1538                           ; 1 bytes @ 0xE
  1539                           
  1540     0020                     ??_get_Delay_Time:
  1541                           
  1542                           ; 1 bytes @ 0x0
  1543     0020                     	ds	8
  1544     0028                     get_Delay_Time@v_Time_Diff_Value_u32r:
  1545                           
  1546                           ; 4 bytes @ 0x8
  1547     0028                     	ds	4
  1548     002C                     get_Delay_Time@v_Timer_CurrentValue_u32r:
  1549                           
  1550                           ; 4 bytes @ 0xC
  1551     002C                     	ds	4
  1552     0030                     get_Delay_Time@v_Timer_StartingValue_u32r:
  1553                           
  1554                           ; 1 bytes @ 0x10
  1555     0030                     	ds	1
  1556     0031                     get_DelayStatus@v_TimeDifference_Value_u32r:
  1557                           
  1558                           ; 4 bytes @ 0x11
  1559     0031                     	ds	4
  1560     0035                     get_DelayStatus@v_TimerStartingValue_u32r:
  1561                           
  1562                           ; 1 bytes @ 0x15
  1563     0035                     	ds	1
  1564     0036                     main@V_Keypad_Long_Press:
  1565                           
  1566                           ; 1 bytes @ 0x16
  1567     0036                     	ds	1
  1568     0037                     main@V_LightStatus:
  1569                           
  1570                           ; 1 bytes @ 0x17
  1571     0037                     	ds	1
  1572                           
  1573                           	psect	maintext
  1574     0161                     __pmaintext:	
  1575 ;;
  1576 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1577 ;;
  1578 ;; *************** function _main *****************
  1579 ;; Defined at:
  1580 ;;		line 87 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  V_LightStatu    1   23[BANK0 ] _Bool 
  1585 ;;  V_Keypad_Lon    1   22[BANK0 ] _Bool 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : B1F/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1595 ;;      Params:         0       0       0       0
  1596 ;;      Locals:         0       2       0       0
  1597 ;;      Temps:          0       0       0       0
  1598 ;;      Totals:         0       2       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels required when called: 8
  1601 ;; This function calls:
  1602 ;;		_LIGHT_Trigger
  1603 ;;		_ReadWrite_HEFlash
  1604 ;;		_SYSTEM_Initialize
  1605 ;;		_Sensing_Receiver
  1606 ;;		_Sensing_Validation
  1607 ;;		_get_DelayStatus
  1608 ;;		_old_light_status
  1609 ;; This function is called by:
  1610 ;;		Startup code after reset
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614     0161                     _main:	
  1615                           ;psect for function _main
  1616                           
  1617     0161                     l1224:	
  1618                           ;incstack = 0
  1619                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1620                           
  1621                           
  1622                           ;main.c: 90:     SYSTEM_Initialize();
  1623     0161  3182  2284  3181   	fcall	_SYSTEM_Initialize
  1624     0164                     l1226:
  1625                           
  1626                           ;main.c: 96:     (INTCONbits.GIE = 1);
  1627     0164  178B               	bsf	11,7	;volatile
  1628     0165                     l1228:
  1629                           
  1630                           ;main.c: 99:     (INTCONbits.PEIE = 1);
  1631     0165  170B               	bsf	11,6	;volatile
  1632     0166                     l1230:
  1633                           
  1634                           ;main.c: 108:     _Bool V_Keypad_Long_Press = 0;
  1635     0166  0020               	movlb	0	; select bank0
  1636     0167  01B6               	clrf	main@V_Keypad_Long_Press
  1637     0168                     l1232:
  1638                           
  1639                           ;main.c: 109:     _Bool V_LightStatus;;main.c: 110:     V_LightStatus = old_light_status
      +                          ();
  1640     0168  3182  2262  3181   	fcall	_old_light_status
  1641     016B  3A00               	xorlw	0
  1642     016C  1D03               	skipz
  1643     016D  296F               	goto	u521
  1644     016E  2971               	goto	u520
  1645     016F                     u521:
  1646     016F  3001               	movlw	1
  1647     0170  2972               	goto	u530
  1648     0171                     u520:
  1649     0171  3000               	movlw	0
  1650     0172                     u530:
  1651     0172  0020               	movlb	0	; select bank0
  1652     0173  00B7               	movwf	main@V_LightStatus
  1653     0174                     l1234:
  1654                           
  1655                           ;main.c: 113:     {;main.c: 114:          Sensing_Receiver();
  1656     0174  3181  21B9  3181   	fcall	_Sensing_Receiver
  1657     0177                     l1236:
  1658                           
  1659                           ;main.c: 115:         if((Sensing_Validation() == 1) && (V_Keypad_Long_Press == 1 ))
  1660     0177  3182  224E  3181   	fcall	_Sensing_Validation
  1661     017A  3A01               	xorlw	1
  1662     017B  1D03               	skipz
  1663     017C  297E               	goto	u541
  1664     017D  297F               	goto	u540
  1665     017E                     u541:
  1666     017E  2994               	goto	l1248
  1667     017F                     u540:
  1668     017F                     l1238:
  1669     017F  0020               	movlb	0	; select bank0
  1670     0180  0336               	decf	main@V_Keypad_Long_Press,w
  1671     0181  1D03               	btfss	3,2
  1672     0182  2984               	goto	u551
  1673     0183  2985               	goto	u550
  1674     0184                     u551:
  1675     0184  2994               	goto	l1248
  1676     0185                     u550:
  1677     0185                     l1240:
  1678                           
  1679                           ;main.c: 116:           {;main.c: 117:              if(V_LightStatus == 0){
  1680     0185  0837               	movf	main@V_LightStatus,w
  1681     0186  1D03               	btfss	3,2
  1682     0187  2989               	goto	u561
  1683     0188  298A               	goto	u560
  1684     0189                     u561:
  1685     0189  298D               	goto	l1244
  1686     018A                     u560:
  1687     018A                     l1242:
  1688                           
  1689                           ;main.c: 118:                  V_LightStatus = 1;
  1690     018A  01B7               	clrf	main@V_LightStatus
  1691     018B  0AB7               	incf	main@V_LightStatus,f
  1692                           
  1693                           ;main.c: 119:              }
  1694     018C  298E               	goto	l160
  1695     018D                     l1244:
  1696                           
  1697                           ;main.c: 121:                  V_LightStatus = 0;
  1698     018D  01B7               	clrf	main@V_LightStatus
  1699     018E                     l160:	
  1700                           ;main.c: 122:              }
  1701                           
  1702                           
  1703                           ;main.c: 124:             V_Keypad_Long_Press = 0;
  1704     018E  01B6               	clrf	main@V_Keypad_Long_Press
  1705     018F                     l1246:
  1706                           
  1707                           ;main.c: 125:             LIGHT_Trigger(V_LightStatus);
  1708     018F  0837               	movf	main@V_LightStatus,w
  1709     0190  3182  22D4  3181   	fcall	_LIGHT_Trigger
  1710                           
  1711                           ;main.c: 126:           }
  1712     0193  299F               	goto	l1252
  1713     0194                     l1248:
  1714     0194  3182  224E  3181   	fcall	_Sensing_Validation
  1715     0197  3A00               	xorlw	0
  1716     0198  1D03               	skipz
  1717     0199  299B               	goto	u571
  1718     019A  299C               	goto	u570
  1719     019B                     u571:
  1720     019B  299F               	goto	l1252
  1721     019C                     u570:
  1722     019C                     l1250:
  1723                           
  1724                           ;main.c: 129:             V_Keypad_Long_Press=1;
  1725     019C  0020               	movlb	0	; select bank0
  1726     019D  01B6               	clrf	main@V_Keypad_Long_Press
  1727     019E  0AB6               	incf	main@V_Keypad_Long_Press,f
  1728     019F                     l1252:
  1729                           
  1730                           ;main.c: 132:       if((get_DelayStatus(&time_EEPROM_WRITE_Period,time_EEPROM_WRITE_coun
      +                          t)==1))
  1731     019F  300A               	movlw	10
  1732     01A0  00F8               	movwf	get_DelayStatus@v_TimeDelay_u16r
  1733     01A1  3000               	movlw	0
  1734     01A2  00F9               	movwf	get_DelayStatus@v_TimeDelay_u16r+1
  1735     01A3  3046               	movlw	(low (_time_EEPROM_WRITE_Period| 0))& (0+255)
  1736     01A4  3181  21F7  3181   	fcall	_get_DelayStatus
  1737     01A7  3A01               	xorlw	1
  1738     01A8  1D03               	skipz
  1739     01A9  29AB               	goto	u581
  1740     01AA  29AC               	goto	u580
  1741     01AB                     u581:
  1742     01AB  2974               	goto	l1234
  1743     01AC                     u580:
  1744     01AC                     l1254:
  1745                           
  1746                           ;main.c: 133:       {;main.c: 134:          ReadWrite_HEFlash(1,V_LightStatus,0x0780);
  1747     01AC  0020               	movlb	0	; select bank0
  1748     01AD  0837               	movf	main@V_LightStatus,w
  1749     01AE  00F2               	movwf	ReadWrite_HEFlash@data
  1750     01AF  3080               	movlw	128
  1751     01B0  00F3               	movwf	ReadWrite_HEFlash@rowstartaddr
  1752     01B1  3007               	movlw	7
  1753     01B2  00F4               	movwf	ReadWrite_HEFlash@rowstartaddr+1
  1754     01B3  3001               	movlw	1
  1755     01B4  3180  20EC  3181   	fcall	_ReadWrite_HEFlash
  1756     01B7  2974               	goto	l1234
  1757     01B8  281F               	ljmp	start
  1758     01B9                     __end_of_main:
  1759                           
  1760                           	psect	text1
  1761     0262                     __ptext1:	
  1762 ;; *************** function _old_light_status *****************
  1763 ;; Defined at:
  1764 ;;		line 201 in file "main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  V_light_stat    1   11[COMMON] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      unsigned char 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1778 ;;      Params:         0       0       0       0
  1779 ;;      Locals:         1       0       0       0
  1780 ;;      Temps:          0       0       0       0
  1781 ;;      Totals:         1       0       0       0
  1782 ;;Total ram usage:        1 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 7
  1785 ;; This function calls:
  1786 ;;		_LIGHT_Trigger
  1787 ;;		_ReadWrite_HEFlash
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793     0262                     _old_light_status:	
  1794                           ;psect for function _old_light_status
  1795                           
  1796     0262                     l1182:	
  1797                           ;incstack = 0
  1798                           ; Regs used in _old_light_status: [wreg+status,2+status,0+pclath+cstack]
  1799                           
  1800                           
  1801                           ;main.c: 203:     unsigned char V_light_status_on = ReadWrite_HEFlash(0,0x00,0x0780);
  1802     0262  01F2               	clrf	ReadWrite_HEFlash@data
  1803     0263  3080               	movlw	128
  1804     0264  00F3               	movwf	ReadWrite_HEFlash@rowstartaddr
  1805     0265  3007               	movlw	7
  1806     0266  00F4               	movwf	ReadWrite_HEFlash@rowstartaddr+1
  1807     0267  3000               	movlw	0
  1808     0268  3180  20EC  3182   	fcall	_ReadWrite_HEFlash
  1809     026B  0872               	movf	?_ReadWrite_HEFlash,w
  1810     026C  00FB               	movwf	old_light_status@V_light_status_on
  1811                           
  1812                           ;main.c: 204:     LIGHT_Trigger(V_light_status_on);
  1813     026D  087B               	movf	old_light_status@V_light_status_on,w
  1814     026E  3182  22D4  3182   	fcall	_LIGHT_Trigger
  1815     0271                     l1184:
  1816                           
  1817                           ;main.c: 205:     return V_light_status_on;
  1818     0271  087B               	movf	old_light_status@V_light_status_on,w
  1819     0272                     l183:
  1820     0272  0008               	return
  1821     0273                     __end_of_old_light_status:
  1822                           
  1823                           	psect	text2
  1824     00EC                     __ptext2:	
  1825 ;; *************** function _ReadWrite_HEFlash *****************
  1826 ;; Defined at:
  1827 ;;		line 89 in file "PIC10_PIC12_HEFlash.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  rw              1    wreg     unsigned char 
  1830 ;;  data            1    2[COMMON] unsigned char 
  1831 ;;  rowstartaddr    2    3[COMMON] unsigned short 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  rw              1    9[COMMON] unsigned char 
  1834 ;;  addr            2    7[COMMON] unsigned short 
  1835 ;;  cnt             1   10[COMMON] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  2    2[COMMON] unsigned short 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1845 ;;      Params:         3       0       0       0
  1846 ;;      Locals:         4       0       0       0
  1847 ;;      Temps:          2       0       0       0
  1848 ;;      Totals:         9       0       0       0
  1849 ;;Total ram usage:        9 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 6
  1852 ;; This function calls:
  1853 ;;		_Read_FLASH
  1854 ;;		_Unlock_FLASH
  1855 ;;		_Write_FLASH
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;;		_old_light_status
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862     00EC                     _ReadWrite_HEFlash:	
  1863                           ;psect for function _ReadWrite_HEFlash
  1864                           
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _ReadWrite_HEFlash: [wreg+status,2+status,0+pclath+cstack]
  1868                           ;ReadWrite_HEFlash@rw stored from wreg
  1869     00EC  00F9               	movwf	ReadWrite_HEFlash@rw
  1870     00ED                     l1128:
  1871                           
  1872                           ;PIC10_PIC12_HEFlash.c: 90:             uint16_t addr;;PIC10_PIC12_HEFlash.c: 95:       
      +                                if (rw == 1) {
  1873     00ED  0379               	decf	ReadWrite_HEFlash@rw,w
  1874     00EE  1D03               	btfss	3,2
  1875     00EF  28F1               	goto	u361
  1876     00F0  28F2               	goto	u360
  1877     00F1                     u361:
  1878     00F1  28F7               	goto	l1132
  1879     00F2                     u360:
  1880     00F2                     l1130:
  1881                           
  1882                           ;PIC10_PIC12_HEFlash.c: 96:                 addr = rowstartaddr;
  1883     00F2  0874               	movf	ReadWrite_HEFlash@rowstartaddr+1,w
  1884     00F3  00F8               	movwf	ReadWrite_HEFlash@addr+1
  1885     00F4  0873               	movf	ReadWrite_HEFlash@rowstartaddr,w
  1886     00F5  00F7               	movwf	ReadWrite_HEFlash@addr
  1887                           
  1888                           ;PIC10_PIC12_HEFlash.c: 97:             } else {
  1889     00F6  28FD               	goto	l1134
  1890     00F7                     l1132:
  1891                           
  1892                           ;PIC10_PIC12_HEFlash.c: 98:                 addr = (rowstartaddr + 0xF);
  1893     00F7  0873               	movf	ReadWrite_HEFlash@rowstartaddr,w
  1894     00F8  3E0F               	addlw	15
  1895     00F9  00F7               	movwf	ReadWrite_HEFlash@addr
  1896     00FA  3000               	movlw	0
  1897     00FB  3D74               	addwfc	ReadWrite_HEFlash@rowstartaddr+1,w
  1898     00FC  00F8               	movwf	ReadWrite_HEFlash@addr+1
  1899     00FD                     l1134:
  1900                           
  1901                           ;PIC10_PIC12_HEFlash.c: 100:             uint8_t cnt;;PIC10_PIC12_HEFlash.c: 103:       
      +                                for (cnt = 0x10; cnt != 0x0; cnt--) {
  1902     00FD  3010               	movlw	16
  1903     00FE  00FA               	movwf	ReadWrite_HEFlash@cnt
  1904     00FF                     l1140:
  1905                           
  1906                           ;PIC10_PIC12_HEFlash.c: 104:                 Read_FLASH(addr);
  1907     00FF  0878               	movf	ReadWrite_HEFlash@addr+1,w
  1908     0100  00F1               	movwf	Read_FLASH@address+1
  1909     0101  0877               	movf	ReadWrite_HEFlash@addr,w
  1910     0102  00F0               	movwf	Read_FLASH@address
  1911     0103  3182  22AA  3180   	fcall	_Read_FLASH
  1912     0106                     l1142:
  1913                           
  1914                           ;PIC10_PIC12_HEFlash.c: 106:                 if (rw == 1) {
  1915     0106  0379               	decf	ReadWrite_HEFlash@rw,w
  1916     0107  1D03               	btfss	3,2
  1917     0108  290A               	goto	u371
  1918     0109  290B               	goto	u370
  1919     010A                     u371:
  1920     010A  2940               	goto	l237
  1921     010B                     u370:
  1922     010B                     l1144:
  1923                           
  1924                           ;PIC10_PIC12_HEFlash.c: 107:                     if (PMDATH == 0x3F) {
  1925     010B  303F               	movlw	63
  1926     010C  0023               	movlb	3	; select bank3
  1927     010D  0614               	xorwf	20,w	;volatile
  1928     010E  1D03               	btfss	3,2
  1929     010F  2911               	goto	u381
  1930     0110  2912               	goto	u380
  1931     0111                     u381:
  1932     0111  291F               	goto	l1150
  1933     0112                     u380:
  1934     0112                     l1146:
  1935                           
  1936                           ;PIC10_PIC12_HEFlash.c: 108:                         PMDAT = data;
  1937     0112  0872               	movf	ReadWrite_HEFlash@data,w
  1938     0113  00F5               	movwf	??_ReadWrite_HEFlash
  1939     0114  01F6               	clrf	??_ReadWrite_HEFlash+1
  1940     0115  0875               	movf	??_ReadWrite_HEFlash,w
  1941     0116  0093               	movwf	19	;volatile
  1942     0117  0876               	movf	??_ReadWrite_HEFlash+1,w
  1943     0118  0094               	movwf	20	;volatile
  1944     0119  1694               	bsf	404,5	;# 
  1945     011A  1214               	bcf	404,4	;# 
  1946     011B                     l1148:
  1947                           
  1948                           ;PIC10_PIC12_HEFlash.c: 111:                         Write_FLASH();
  1949     011B  3182  22DC  3180   	fcall	_Write_FLASH
  1950                           
  1951                           ;PIC10_PIC12_HEFlash.c: 112:                         break;
  1952     011E  2959               	goto	l1168
  1953     011F                     l1150:
  1954                           
  1955                           ;PIC10_PIC12_HEFlash.c: 114:                     addr++;
  1956     011F  3001               	movlw	1
  1957     0120  07F7               	addwf	ReadWrite_HEFlash@addr,f
  1958     0121  3000               	movlw	0
  1959     0122  3DF8               	addwfc	ReadWrite_HEFlash@addr+1,f
  1960                           
  1961                           ;PIC10_PIC12_HEFlash.c: 117:                     if (cnt <= 0x1) {
  1962     0123  3002               	movlw	2
  1963     0124  027A               	subwf	ReadWrite_HEFlash@cnt,w
  1964     0125  1803               	skipnc
  1965     0126  2928               	goto	u391
  1966     0127  2929               	goto	u390
  1967     0128                     u391:
  1968     0128  2952               	goto	l1164
  1969     0129                     u390:
  1970     0129                     l1152:
  1971                           
  1972                           ;PIC10_PIC12_HEFlash.c: 119:                         PMCON1 = 0b00010100;
  1973     0129  3014               	movlw	20
  1974     012A  0095               	movwf	21	;volatile
  1975                           
  1976                           ;PIC10_PIC12_HEFlash.c: 120:                         PMADR = rowstartaddr;
  1977     012B  0874               	movf	ReadWrite_HEFlash@rowstartaddr+1,w
  1978     012C  0092               	movwf	18	;volatile
  1979     012D  0873               	movf	ReadWrite_HEFlash@rowstartaddr,w
  1980     012E  0091               	movwf	17	;volatile
  1981     012F                     l1154:
  1982                           
  1983                           ;PIC10_PIC12_HEFlash.c: 121:                         Unlock_FLASH();
  1984     012F  3182  229E  3180   	fcall	_Unlock_FLASH
  1985     0132                     l1156:
  1986                           
  1987                           ;PIC10_PIC12_HEFlash.c: 123:                         PMDAT = data;
  1988     0132  0872               	movf	ReadWrite_HEFlash@data,w
  1989     0133  00F5               	movwf	??_ReadWrite_HEFlash
  1990     0134  01F6               	clrf	??_ReadWrite_HEFlash+1
  1991     0135  0875               	movf	??_ReadWrite_HEFlash,w
  1992     0136  0023               	movlb	3	; select bank3
  1993     0137  0093               	movwf	19	;volatile
  1994     0138  0876               	movf	??_ReadWrite_HEFlash+1,w
  1995     0139  0094               	movwf	20	;volatile
  1996     013A  1694               	bsf	404,5	;# 
  1997     013B  1214               	bcf	404,4	;# 
  1998                           
  1999                           ;PIC10_PIC12_HEFlash.c: 126:                         Write_FLASH();
  2000     013C  3182  22DC  3180   	fcall	_Write_FLASH
  2001     013F  2952               	goto	l1164
  2002     0140                     l237:
  2003                           
  2004                           ;PIC10_PIC12_HEFlash.c: 129:                     if ((PMDATH & 0x20) && (PMDATH != 0x3F)
      +                          ) {
  2005     0140  0023               	movlb	3	; select bank3
  2006     0141  1E94               	btfss	20,5	;volatile
  2007     0142  2944               	goto	u401
  2008     0143  2945               	goto	u400
  2009     0144                     u401:
  2010     0144  294E               	goto	l1162
  2011     0145                     u400:
  2012     0145                     l1158:
  2013     0145  303F               	movlw	63
  2014     0146  0614               	xorwf	20,w	;volatile
  2015     0147  1903               	btfsc	3,2
  2016     0148  294A               	goto	u411
  2017     0149  294B               	goto	u410
  2018     014A                     u411:
  2019     014A  294E               	goto	l1162
  2020     014B                     u410:
  2021     014B                     l1160:
  2022                           
  2023                           ;PIC10_PIC12_HEFlash.c: 130:                         data = (PMDAT & 0xFFF);
  2024     014B  0813               	movf	19,w	;volatile
  2025     014C  00F2               	movwf	ReadWrite_HEFlash@data
  2026                           
  2027                           ;PIC10_PIC12_HEFlash.c: 131:                         break;
  2028     014D  2959               	goto	l1168
  2029     014E                     l1162:
  2030                           
  2031                           ;PIC10_PIC12_HEFlash.c: 133:                     addr--;
  2032     014E  3001               	movlw	1
  2033     014F  02F7               	subwf	ReadWrite_HEFlash@addr,f
  2034     0150  3000               	movlw	0
  2035     0151  3BF8               	subwfb	ReadWrite_HEFlash@addr+1,f
  2036     0152                     l1164:
  2037                           
  2038                           ;PIC10_PIC12_HEFlash.c: 136:             }
  2039     0152  3001               	movlw	1
  2040     0153  02FA               	subwf	ReadWrite_HEFlash@cnt,f
  2041     0154                     l1166:
  2042     0154  087A               	movf	ReadWrite_HEFlash@cnt,w
  2043     0155  1D03               	btfss	3,2
  2044     0156  2958               	goto	u421
  2045     0157  2959               	goto	u420
  2046     0158                     u421:
  2047     0158  28FF               	goto	l1140
  2048     0159                     u420:
  2049     0159                     l1168:
  2050                           
  2051                           ;PIC10_PIC12_HEFlash.c: 137:             return data ;
  2052     0159  0872               	movf	ReadWrite_HEFlash@data,w
  2053     015A  00F5               	movwf	??_ReadWrite_HEFlash
  2054     015B  01F6               	clrf	??_ReadWrite_HEFlash+1
  2055     015C  0875               	movf	??_ReadWrite_HEFlash,w
  2056     015D  00F2               	movwf	?_ReadWrite_HEFlash
  2057     015E  0876               	movf	??_ReadWrite_HEFlash+1,w
  2058     015F  00F3               	movwf	?_ReadWrite_HEFlash+1
  2059     0160                     l242:
  2060     0160  0008               	return
  2061     0161                     __end_of_ReadWrite_HEFlash:
  2062                           
  2063                           	psect	text3
  2064     02DC                     __ptext3:	
  2065 ;; *************** function _Write_FLASH *****************
  2066 ;; Defined at:
  2067 ;;		line 190 in file "PIC10_PIC12_HEFlash.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2081 ;;      Params:         0       0       0       0
  2082 ;;      Locals:         0       0       0       0
  2083 ;;      Temps:          0       0       0       0
  2084 ;;      Totals:         0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 5
  2088 ;; This function calls:
  2089 ;;		_Unlock_FLASH
  2090 ;; This function is called by:
  2091 ;;		_ReadWrite_HEFlash
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095     02DC                     _Write_FLASH:	
  2096                           ;psect for function _Write_FLASH
  2097                           
  2098     02DC                     l1056:	
  2099                           ;incstack = 0
  2100                           ; Regs used in _Write_FLASH: [wreg+status,2+status,0+pclath+cstack]
  2101                           
  2102                           
  2103                           ;PIC10_PIC12_HEFlash.c: 193:     PMCON1 = 0b00000100;
  2104     02DC  3004               	movlw	4
  2105     02DD  0023               	movlb	3	; select bank3
  2106     02DE  0095               	movwf	21	;volatile
  2107     02DF                     l1058:
  2108                           
  2109                           ;PIC10_PIC12_HEFlash.c: 194:     Unlock_FLASH();
  2110     02DF  3182  229E  3182   	fcall	_Unlock_FLASH
  2111     02E2                     l260:
  2112     02E2  0008               	return
  2113     02E3                     __end_of_Write_FLASH:
  2114                           
  2115                           	psect	text4
  2116     029E                     __ptext4:	
  2117 ;; *************** function _Unlock_FLASH *****************
  2118 ;; Defined at:
  2119 ;;		line 177 in file "PIC10_PIC12_HEFlash.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2133 ;;      Params:         0       0       0       0
  2134 ;;      Locals:         0       0       0       0
  2135 ;;      Temps:          0       0       0       0
  2136 ;;      Totals:         0       0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 4
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_ReadWrite_HEFlash
  2144 ;;		_Write_FLASH
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148     029E                     _Unlock_FLASH:	
  2149                           ;psect for function _Unlock_FLASH
  2150                           
  2151     029E                     l1030:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _Unlock_FLASH: [wreg]
  2154                           
  2155                           
  2156                           ;PIC10_PIC12_HEFlash.c: 178:     PMCON2 = 0x55;
  2157     029E  3055               	movlw	85
  2158     029F  0023               	movlb	3	; select bank3
  2159     02A0  0096               	movwf	22	;volsfr
  2160                           
  2161                           ;PIC10_PIC12_HEFlash.c: 179:     PMCON2 = 0xAA;
  2162     02A1  30AA               	movlw	170
  2163     02A2  0096               	movwf	22	;volsfr
  2164     02A3                     l1032:
  2165                           
  2166                           ;PIC10_PIC12_HEFlash.c: 180:     WR = 1;
  2167     02A3  1495               	bsf	21,1	;volatile
  2168     02A4                     l254:	
  2169                           ;PIC10_PIC12_HEFlash.c: 181:     while (WR);
  2170                           
  2171     02A4  1895               	btfsc	21,1	;volatile
  2172     02A5  2AA7               	goto	u301
  2173     02A6  2AA8               	goto	u300
  2174     02A7                     u301:
  2175     02A7  2AA4               	goto	l254
  2176     02A8                     u300:
  2177     02A8                     l256:
  2178                           
  2179                           ;PIC10_PIC12_HEFlash.c: 182:     WREN = 0;
  2180     02A8  1115               	bcf	21,2	;volatile
  2181     02A9                     l257:
  2182     02A9  0008               	return
  2183     02AA                     __end_of_Unlock_FLASH:
  2184                           
  2185                           	psect	text5
  2186     02AA                     __ptext5:	
  2187 ;; *************** function _Read_FLASH *****************
  2188 ;; Defined at:
  2189 ;;		line 164 in file "PIC10_PIC12_HEFlash.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  address         2    0[COMMON] unsigned short 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2203 ;;      Params:         2       0       0       0
  2204 ;;      Locals:         0       0       0       0
  2205 ;;      Temps:          0       0       0       0
  2206 ;;      Totals:         2       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 4
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_ReadWrite_HEFlash
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     02AA                     _Read_FLASH:	
  2218                           ;psect for function _Read_FLASH
  2219                           
  2220     02AA                     l1054:	
  2221                           ;incstack = 0
  2222                           ; Regs used in _Read_FLASH: [wreg]
  2223                           
  2224                           
  2225                           ;PIC10_PIC12_HEFlash.c: 166:         PMADR = address;
  2226     02AA  0871               	movf	Read_FLASH@address+1,w
  2227     02AB  0023               	movlb	3	; select bank3
  2228     02AC  0092               	movwf	18	;volatile
  2229     02AD  0870               	movf	Read_FLASH@address,w
  2230     02AE  0091               	movwf	17	;volatile
  2231                           
  2232                           ;PIC10_PIC12_HEFlash.c: 167:         PMCON1 = 0b00000001;
  2233     02AF  3001               	movlw	1
  2234     02B0  0095               	movwf	21	;volatile
  2235     02B1                     l248:	
  2236                           ;PIC10_PIC12_HEFlash.c: 168:         while (RD);
  2237                           
  2238     02B1  1815               	btfsc	21,0	;volatile
  2239     02B2  2AB4               	goto	u331
  2240     02B3  2AB5               	goto	u330
  2241     02B4                     u331:
  2242     02B4  2AB1               	goto	l248
  2243     02B5                     u330:
  2244     02B5                     l251:
  2245     02B5  0008               	return
  2246     02B6                     __end_of_Read_FLASH:
  2247                           
  2248                           	psect	text6
  2249     02D4                     __ptext6:	
  2250 ;; *************** function _LIGHT_Trigger *****************
  2251 ;; Defined at:
  2252 ;;		line 189 in file "main.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  Status          1    wreg     unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  Status          1    0[COMMON] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2266 ;;      Params:         0       0       0       0
  2267 ;;      Locals:         1       0       0       0
  2268 ;;      Temps:          0       0       0       0
  2269 ;;      Totals:         1       0       0       0
  2270 ;;Total ram usage:        1 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 4
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;;		_old_light_status
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281     02D4                     _LIGHT_Trigger:	
  2282                           ;psect for function _LIGHT_Trigger
  2283                           
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in _LIGHT_Trigger: [wreg+status,0]
  2287                           ;LIGHT_Trigger@Status stored from wreg
  2288     02D4  00F0               	movwf	LIGHT_Trigger@Status
  2289     02D5                     l1110:
  2290                           
  2291                           ;main.c: 189: void LIGHT_Trigger(unsigned char Status );main.c: 190: {;main.c: 191:     
      +                          LATAbits.LATA1=Status;
  2292     02D5  0C70               	rrf	LIGHT_Trigger@Status,w
  2293     02D6  0022               	movlb	2	; select bank2
  2294     02D7  1C03               	skipc
  2295     02D8  108C               	bcf	12,1	;volatile
  2296     02D9  1803               	skipnc
  2297     02DA  148C               	bsf	12,1	;volatile
  2298     02DB                     l180:
  2299     02DB  0008               	return
  2300     02DC                     __end_of_LIGHT_Trigger:
  2301                           
  2302                           	psect	text7
  2303     024E                     __ptext7:	
  2304 ;; *************** function _Sensing_Validation *****************
  2305 ;; Defined at:
  2306 ;;		line 170 in file "main.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      unsigned char 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2320 ;;      Params:         0       0       0       0
  2321 ;;      Locals:         0       0       0       0
  2322 ;;      Temps:          0       0       0       0
  2323 ;;      Totals:         0       0       0       0
  2324 ;;Total ram usage:        0 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 4
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334     024E                     _Sensing_Validation:	
  2335                           ;psect for function _Sensing_Validation
  2336                           
  2337     024E                     l1200:	
  2338                           ;incstack = 0
  2339                           ; Regs used in _Sensing_Validation: [wreg+status,2+status,0]
  2340                           
  2341                           
  2342                           ;main.c: 172:     if((V_Freequency_u32 >= 15))
  2343     024E  0020               	movlb	0	; select bank0
  2344     024F  083B               	movf	_V_Freequency_u32+3,w
  2345     0250  1D03               	btfss	3,2
  2346     0251  2A5E               	goto	u470
  2347     0252  083A               	movf	_V_Freequency_u32+2,w
  2348     0253  1D03               	btfss	3,2
  2349     0254  2A5E               	goto	u470
  2350     0255  0839               	movf	_V_Freequency_u32+1,w
  2351     0256  1D03               	btfss	3,2
  2352     0257  2A5E               	goto	u470
  2353     0258  300F               	movlw	15
  2354     0259  0238               	subwf	_V_Freequency_u32,w
  2355     025A  1C03               	btfss	3,0
  2356     025B  2A5D               	goto	u471
  2357     025C  2A5E               	goto	u470
  2358     025D                     u471:
  2359     025D  2A60               	goto	l1208
  2360     025E                     u470:
  2361     025E                     l1202:
  2362                           
  2363                           ;main.c: 173:     {;main.c: 174:         return 1;
  2364     025E  3001               	movlw	1
  2365     025F  2A61               	goto	l176
  2366     0260                     l1208:
  2367                           
  2368                           ;main.c: 177:     {;main.c: 178:          return 0;
  2369     0260  3000               	movlw	0
  2370     0261                     l176:
  2371     0261  0008               	return
  2372     0262                     __end_of_Sensing_Validation:
  2373                           
  2374                           	psect	text8
  2375     01B9                     __ptext8:	
  2376 ;; *************** function _Sensing_Receiver *****************
  2377 ;; Defined at:
  2378 ;;		line 145 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2392 ;;      Params:         0       0       0       0
  2393 ;;      Locals:         0       0       0       0
  2394 ;;      Temps:          0       0       0       0
  2395 ;;      Totals:         0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 7
  2399 ;; This function calls:
  2400 ;;		_get_DelayStatus
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406     01B9                     _Sensing_Receiver:	
  2407                           ;psect for function _Sensing_Receiver
  2408                           
  2409     01B9                     l1188:	
  2410                           ;incstack = 0
  2411                           ; Regs used in _Sensing_Receiver: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2412                           
  2413                           
  2414                           ;main.c: 147:     if(Flag_FreCounter == 1)
  2415     01B9  0020               	movlb	0	; select bank0
  2416     01BA  0345               	decf	_Flag_FreCounter,w
  2417     01BB  1D03               	btfss	3,2
  2418     01BC  29BE               	goto	u441
  2419     01BD  29BF               	goto	u440
  2420     01BE                     u441:
  2421     01BE  29D8               	goto	l1196
  2422     01BF                     u440:
  2423     01BF                     l1190:
  2424                           
  2425                           ;main.c: 148:         {;main.c: 149:         if(V_FreequencyCounter_u32 == 0)
  2426     01BF  083F               	movf	_V_FreequencyCounter_u32+3,w
  2427     01C0  043E               	iorwf	_V_FreequencyCounter_u32+2,w
  2428     01C1  043D               	iorwf	_V_FreequencyCounter_u32+1,w
  2429     01C2  043C               	iorwf	_V_FreequencyCounter_u32,w
  2430     01C3  1D03               	skipz
  2431     01C4  29C6               	goto	u451
  2432     01C5  29C7               	goto	u450
  2433     01C6                     u451:
  2434     01C6  29CF               	goto	l170
  2435     01C7                     u450:
  2436     01C7                     l1192:
  2437                           
  2438                           ;main.c: 150:         {;main.c: 151:             time_Scanning_Period = 0;
  2439     01C7  3000               	movlw	0
  2440     01C8  00CD               	movwf	_time_Scanning_Period+3
  2441     01C9  3000               	movlw	0
  2442     01CA  00CC               	movwf	_time_Scanning_Period+2
  2443     01CB  3000               	movlw	0
  2444     01CC  00CB               	movwf	_time_Scanning_Period+1
  2445     01CD  3000               	movlw	0
  2446     01CE  00CA               	movwf	_time_Scanning_Period
  2447     01CF                     l170:	
  2448                           ;main.c: 152:         }
  2449                           
  2450                           
  2451                           ;main.c: 153:             V_FreequencyCounter_u32++;
  2452     01CF  3001               	movlw	1
  2453     01D0  07BC               	addwf	_V_FreequencyCounter_u32,f
  2454     01D1  3000               	movlw	0
  2455     01D2  3DBD               	addwfc	_V_FreequencyCounter_u32+1,f
  2456     01D3  3000               	movlw	0
  2457     01D4  3DBE               	addwfc	_V_FreequencyCounter_u32+2,f
  2458     01D5  3000               	movlw	0
  2459     01D6  3DBF               	addwfc	_V_FreequencyCounter_u32+3,f
  2460     01D7                     l1194:
  2461                           
  2462                           ;main.c: 154:             Flag_FreCounter = 0;
  2463     01D7  01C5               	clrf	_Flag_FreCounter
  2464     01D8                     l1196:
  2465                           
  2466                           ;main.c: 157:      if((get_DelayStatus(&time_Scanning_Period,time_Scanning_Period_count)
      +                          ==1))
  2467     01D8  30FA               	movlw	250
  2468     01D9  00F8               	movwf	get_DelayStatus@v_TimeDelay_u16r
  2469     01DA  3000               	movlw	0
  2470     01DB  00F9               	movwf	get_DelayStatus@v_TimeDelay_u16r+1
  2471     01DC  304A               	movlw	(low (_time_Scanning_Period| 0))& (0+255)
  2472     01DD  3181  21F7  3181   	fcall	_get_DelayStatus
  2473     01E0  3A01               	xorlw	1
  2474     01E1  1D03               	skipz
  2475     01E2  29E4               	goto	u461
  2476     01E3  29E5               	goto	u460
  2477     01E4                     u461:
  2478     01E4  29F6               	goto	l172
  2479     01E5                     u460:
  2480     01E5                     l1198:
  2481                           
  2482                           ;main.c: 158:         {;main.c: 159:             V_Freequency_u32 = V_FreequencyCounter_
      +                          u32;
  2483     01E5  0020               	movlb	0	; select bank0
  2484     01E6  083F               	movf	_V_FreequencyCounter_u32+3,w
  2485     01E7  00BB               	movwf	_V_Freequency_u32+3
  2486     01E8  083E               	movf	_V_FreequencyCounter_u32+2,w
  2487     01E9  00BA               	movwf	_V_Freequency_u32+2
  2488     01EA  083D               	movf	_V_FreequencyCounter_u32+1,w
  2489     01EB  00B9               	movwf	_V_Freequency_u32+1
  2490     01EC  083C               	movf	_V_FreequencyCounter_u32,w
  2491     01ED  00B8               	movwf	_V_Freequency_u32
  2492                           
  2493                           ;main.c: 160:             V_FreequencyCounter_u32 = 0;
  2494     01EE  3000               	movlw	0
  2495     01EF  00BF               	movwf	_V_FreequencyCounter_u32+3
  2496     01F0  3000               	movlw	0
  2497     01F1  00BE               	movwf	_V_FreequencyCounter_u32+2
  2498     01F2  3000               	movlw	0
  2499     01F3  00BD               	movwf	_V_FreequencyCounter_u32+1
  2500     01F4  3000               	movlw	0
  2501     01F5  00BC               	movwf	_V_FreequencyCounter_u32
  2502     01F6                     l172:
  2503     01F6  0008               	return
  2504     01F7                     __end_of_Sensing_Receiver:
  2505                           
  2506                           	psect	text9
  2507     01F7                     __ptext9:	
  2508 ;; *************** function _get_DelayStatus *****************
  2509 ;; Defined at:
  2510 ;;		line 44 in file "SoftDelay.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  v_TimerStart    1    wreg     PTR unsigned long 
  2513 ;;		 -> time_Scanning_Period(4), time_EEPROM_WRITE_Period(4), 
  2514 ;;  v_TimeDelay_    2    8[COMMON] unsigned short 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  v_TimerStart    1   21[BANK0 ] PTR unsigned long 
  2517 ;;		 -> time_Scanning_Period(4), time_EEPROM_WRITE_Period(4), 
  2518 ;;  v_TimeDiffer    4   17[BANK0 ] unsigned long 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      _Bool 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2528 ;;      Params:         2       0       0       0
  2529 ;;      Locals:         0       5       0       0
  2530 ;;      Temps:          4       0       0       0
  2531 ;;      Totals:         6       5       0       0
  2532 ;;Total ram usage:       11 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 6
  2535 ;; This function calls:
  2536 ;;		_get_Delay_Time
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;;		_Sensing_Receiver
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543     01F7                     _get_DelayStatus:	
  2544                           ;psect for function _get_DelayStatus
  2545                           
  2546                           
  2547                           ;incstack = 0
  2548                           ; Regs used in _get_DelayStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2549                           ;get_DelayStatus@v_TimerStartingValue_u32r stored from wreg
  2550     01F7  0020               	movlb	0	; select bank0
  2551     01F8  00B5               	movwf	get_DelayStatus@v_TimerStartingValue_u32r
  2552     01F9                     l1112:
  2553                           
  2554                           ;SoftDelay.c: 44:     _Bool get_DelayStatus(uint32_t *v_TimerStartingValue_u32r, uint16_
      +                          t v_TimeDelay_u16r);SoftDelay.c: 45: {;SoftDelay.c: 46:     uint32_t v_TimeDifference_Va
      +                          lue_u32r = get_Delay_Time(v_TimerStartingValue_u32r);
  2555     01F9  0835               	movf	get_DelayStatus@v_TimerStartingValue_u32r,w
  2556     01FA  3180  203B  3181   	fcall	_get_Delay_Time
  2557     01FD  0877               	movf	?_get_Delay_Time+3,w
  2558     01FE  0020               	movlb	0	; select bank0
  2559     01FF  00B4               	movwf	get_DelayStatus@v_TimeDifference_Value_u32r+3
  2560     0200  0876               	movf	?_get_Delay_Time+2,w
  2561     0201  00B3               	movwf	get_DelayStatus@v_TimeDifference_Value_u32r+2
  2562     0202  0875               	movf	?_get_Delay_Time+1,w
  2563     0203  00B2               	movwf	get_DelayStatus@v_TimeDifference_Value_u32r+1
  2564     0204  0874               	movf	?_get_Delay_Time,w
  2565     0205  00B1               	movwf	get_DelayStatus@v_TimeDifference_Value_u32r
  2566     0206                     l1114:
  2567                           
  2568                           ;SoftDelay.c: 48:     if( v_TimeDifference_Value_u32r >= v_TimeDelay_u16r)
  2569     0206  0878               	movf	get_DelayStatus@v_TimeDelay_u16r,w
  2570     0207  00FA               	movwf	??_get_DelayStatus
  2571     0208  0879               	movf	get_DelayStatus@v_TimeDelay_u16r+1,w
  2572     0209  00FB               	movwf	??_get_DelayStatus+1
  2573     020A  01FC               	clrf	??_get_DelayStatus+2
  2574     020B  01FD               	clrf	??_get_DelayStatus+3
  2575     020C  087D               	movf	??_get_DelayStatus+3,w
  2576     020D  0234               	subwf	get_DelayStatus@v_TimeDifference_Value_u32r+3,w
  2577     020E  1D03               	skipz
  2578     020F  2A1A               	goto	u355
  2579     0210  087C               	movf	??_get_DelayStatus+2,w
  2580     0211  0233               	subwf	get_DelayStatus@v_TimeDifference_Value_u32r+2,w
  2581     0212  1D03               	skipz
  2582     0213  2A1A               	goto	u355
  2583     0214  087B               	movf	??_get_DelayStatus+1,w
  2584     0215  0232               	subwf	get_DelayStatus@v_TimeDifference_Value_u32r+1,w
  2585     0216  1D03               	skipz
  2586     0217  2A1A               	goto	u355
  2587     0218  087A               	movf	??_get_DelayStatus,w
  2588     0219  0231               	subwf	get_DelayStatus@v_TimeDifference_Value_u32r,w
  2589     021A                     u355:
  2590     021A  1C03               	skipc
  2591     021B  2A1D               	goto	u351
  2592     021C  2A1E               	goto	u350
  2593     021D                     u351:
  2594     021D  2A28               	goto	l1124
  2595     021E                     u350:
  2596     021E                     l1116:
  2597                           
  2598                           ;SoftDelay.c: 49:     {;SoftDelay.c: 50:         *v_TimerStartingValue_u32r =0;
  2599     021E  0835               	movf	get_DelayStatus@v_TimerStartingValue_u32r,w
  2600     021F  0086               	movwf	6
  2601     0220  0187               	clrf	7
  2602     0221  3000               	movlw	0
  2603     0222  3FC0               	movwi [0]fsr1
  2604     0223  3FC1               	movwi [1]fsr1
  2605     0224  3FC2               	movwi [2]fsr1
  2606     0225  3FC3               	movwi [3]fsr1
  2607     0226                     l1118:
  2608                           
  2609                           ;SoftDelay.c: 51:         return 1;
  2610     0226  3001               	movlw	1
  2611     0227  2A29               	goto	l191
  2612     0228                     l1124:
  2613                           
  2614                           ;SoftDelay.c: 54:     {;SoftDelay.c: 55:         return 0;
  2615     0228  3000               	movlw	0
  2616     0229                     l191:
  2617     0229  0008               	return
  2618     022A                     __end_of_get_DelayStatus:
  2619                           
  2620                           	psect	text10
  2621     003B                     __ptext10:	
  2622 ;; *************** function _get_Delay_Time *****************
  2623 ;; Defined at:
  2624 ;;		line 87 in file "SoftDelay.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  v_Timer_Star    1    wreg     PTR unsigned long 
  2627 ;;		 -> time_Scanning_Period(4), time_EEPROM_WRITE_Period(4), 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  v_Timer_Star    1   16[BANK0 ] PTR unsigned long 
  2630 ;;		 -> time_Scanning_Period(4), time_EEPROM_WRITE_Period(4), 
  2631 ;;  v_Timer_Curr    4   12[BANK0 ] unsigned long 
  2632 ;;  v_Time_Diff_    4    8[BANK0 ] unsigned long 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  4    4[COMMON] unsigned long 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2642 ;;      Params:         4       0       0       0
  2643 ;;      Locals:         0       9       0       0
  2644 ;;      Temps:          0       8       0       0
  2645 ;;      Totals:         4      17       0       0
  2646 ;;Total ram usage:       21 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 5
  2649 ;; This function calls:
  2650 ;;		_get_TIMER0Status
  2651 ;; This function is called by:
  2652 ;;		_get_DelayStatus
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656     003B                     _get_Delay_Time:	
  2657                           ;psect for function _get_Delay_Time
  2658                           
  2659                           
  2660                           ;incstack = 0
  2661                           ; Regs used in _get_Delay_Time: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2662                           ;get_Delay_Time@v_Timer_StartingValue_u32r stored from wreg
  2663     003B  0020               	movlb	0	; select bank0
  2664     003C  00B0               	movwf	get_Delay_Time@v_Timer_StartingValue_u32r
  2665     003D                     l1036:
  2666                           
  2667                           ;SoftDelay.c: 87: uint32_t get_Delay_Time(uint32_t *v_Timer_StartingValue_u32r);SoftDela
      +                          y.c: 88: {;SoftDelay.c: 89:     uint32_t v_Time_Diff_Value_u32r,v_Timer_CurrentValue_u32
      +                          r;;SoftDelay.c: 92:     if(*v_Timer_StartingValue_u32r==0)
  2668     003D  0830               	movf	get_Delay_Time@v_Timer_StartingValue_u32r,w
  2669     003E  0086               	movwf	6
  2670     003F  0187               	clrf	7
  2671     0040  3F40               	moviw [0]fsr1
  2672     0041  00A0               	movwf	??_get_Delay_Time
  2673     0042  3F41               	moviw [1]fsr1
  2674     0043  00A1               	movwf	??_get_Delay_Time+1
  2675     0044  3F42               	moviw [2]fsr1
  2676     0045  00A2               	movwf	??_get_Delay_Time+2
  2677     0046  3F43               	moviw [3]fsr1
  2678     0047  00A3               	movwf	??_get_Delay_Time+3
  2679     0048  0823               	movf	??_get_Delay_Time+3,w
  2680     0049  0422               	iorwf	??_get_Delay_Time+2,w
  2681     004A  0421               	iorwf	??_get_Delay_Time+1,w
  2682     004B  0420               	iorwf	??_get_Delay_Time,w
  2683     004C  1D03               	skipz
  2684     004D  284F               	goto	u311
  2685     004E  2850               	goto	u310
  2686     004F                     u311:
  2687     004F  286F               	goto	l1040
  2688     0050                     u310:
  2689     0050                     l1038:
  2690                           
  2691                           ;SoftDelay.c: 93:     {;SoftDelay.c: 94:        *v_Timer_StartingValue_u32r =get_TIMER0S
      +                          tatus()-1;
  2692     0050  30FF               	movlw	255
  2693     0051  00A0               	movwf	??_get_Delay_Time
  2694     0052  30FF               	movlw	255
  2695     0053  00A1               	movwf	??_get_Delay_Time+1
  2696     0054  30FF               	movlw	255
  2697     0055  00A2               	movwf	??_get_Delay_Time+2
  2698     0056  30FF               	movlw	255
  2699     0057  00A3               	movwf	??_get_Delay_Time+3
  2700     0058  3182  22C1  3180   	fcall	_get_TIMER0Status
  2701     005B  0870               	movf	?_get_TIMER0Status,w
  2702     005C  0020               	movlb	0	; select bank0
  2703     005D  07A0               	addwf	??_get_Delay_Time,f
  2704     005E  0871               	movf	?_get_TIMER0Status+1,w
  2705     005F  3DA1               	addwfc	??_get_Delay_Time+1,f
  2706     0060  0872               	movf	?_get_TIMER0Status+2,w
  2707     0061  3DA2               	addwfc	??_get_Delay_Time+2,f
  2708     0062  0873               	movf	?_get_TIMER0Status+3,w
  2709     0063  3DA3               	addwfc	??_get_Delay_Time+3,f
  2710     0064  0830               	movf	get_Delay_Time@v_Timer_StartingValue_u32r,w
  2711     0065  0086               	movwf	6
  2712     0066  0187               	clrf	7
  2713     0067  0820               	movf	??_get_Delay_Time,w
  2714     0068  3FC0               	movwi [0]fsr1
  2715     0069  0821               	movf	??_get_Delay_Time+1,w
  2716     006A  3FC1               	movwi [1]fsr1
  2717     006B  0822               	movf	??_get_Delay_Time+2,w
  2718     006C  3FC2               	movwi [2]fsr1
  2719     006D  0823               	movf	??_get_Delay_Time+3,w
  2720     006E  3FC3               	movwi [3]fsr1
  2721     006F                     l1040:
  2722                           
  2723                           ;SoftDelay.c: 95:        v_Timer_CurrentValue_u32r=get_TIMER0Status();
  2724     006F  3182  22C1  3180   	fcall	_get_TIMER0Status
  2725     0072  0873               	movf	?_get_TIMER0Status+3,w
  2726     0073  0020               	movlb	0	; select bank0
  2727     0074  00AF               	movwf	get_Delay_Time@v_Timer_CurrentValue_u32r+3
  2728     0075  0872               	movf	?_get_TIMER0Status+2,w
  2729     0076  00AE               	movwf	get_Delay_Time@v_Timer_CurrentValue_u32r+2
  2730     0077  0871               	movf	?_get_TIMER0Status+1,w
  2731     0078  00AD               	movwf	get_Delay_Time@v_Timer_CurrentValue_u32r+1
  2732     0079  0870               	movf	?_get_TIMER0Status,w
  2733     007A  00AC               	movwf	get_Delay_Time@v_Timer_CurrentValue_u32r
  2734     007B                     l1044:	
  2735                           ;SoftDelay.c: 96:     }
  2736                           
  2737                           
  2738                           ;SoftDelay.c: 103:     if(*v_Timer_StartingValue_u32r > v_Timer_CurrentValue_u32r)
  2739     007B  0830               	movf	get_Delay_Time@v_Timer_StartingValue_u32r,w
  2740     007C  0086               	movwf	6
  2741     007D  0187               	clrf	7
  2742     007E  3F40               	moviw [0]fsr1
  2743     007F  00A0               	movwf	??_get_Delay_Time
  2744     0080  3F41               	moviw [1]fsr1
  2745     0081  00A1               	movwf	??_get_Delay_Time+1
  2746     0082  3F42               	moviw [2]fsr1
  2747     0083  00A2               	movwf	??_get_Delay_Time+2
  2748     0084  3F43               	moviw [3]fsr1
  2749     0085  00A3               	movwf	??_get_Delay_Time+3
  2750     0086  0823               	movf	??_get_Delay_Time+3,w
  2751     0087  022F               	subwf	get_Delay_Time@v_Timer_CurrentValue_u32r+3,w
  2752     0088  1D03               	skipz
  2753     0089  2894               	goto	u325
  2754     008A  0822               	movf	??_get_Delay_Time+2,w
  2755     008B  022E               	subwf	get_Delay_Time@v_Timer_CurrentValue_u32r+2,w
  2756     008C  1D03               	skipz
  2757     008D  2894               	goto	u325
  2758     008E  0821               	movf	??_get_Delay_Time+1,w
  2759     008F  022D               	subwf	get_Delay_Time@v_Timer_CurrentValue_u32r+1,w
  2760     0090  1D03               	skipz
  2761     0091  2894               	goto	u325
  2762     0092  0820               	movf	??_get_Delay_Time,w
  2763     0093  022C               	subwf	get_Delay_Time@v_Timer_CurrentValue_u32r,w
  2764     0094                     u325:
  2765     0094  1803               	skipnc
  2766     0095  2897               	goto	u321
  2767     0096  2898               	goto	u320
  2768     0097                     u321:
  2769     0097  28C0               	goto	l1048
  2770     0098                     u320:
  2771     0098                     l1046:
  2772                           
  2773                           ;SoftDelay.c: 104:     {;SoftDelay.c: 105:         v_Time_Diff_Value_u32r = (4294967295 
      +                          - *v_Timer_StartingValue_u32r) + v_Timer_CurrentValue_u32r ;
  2774     0098  0830               	movf	get_Delay_Time@v_Timer_StartingValue_u32r,w
  2775     0099  0086               	movwf	6
  2776     009A  0187               	clrf	7
  2777     009B  3F40               	moviw [0]fsr1
  2778     009C  00A0               	movwf	??_get_Delay_Time
  2779     009D  3F41               	moviw [1]fsr1
  2780     009E  00A1               	movwf	??_get_Delay_Time+1
  2781     009F  3F42               	moviw [2]fsr1
  2782     00A0  00A2               	movwf	??_get_Delay_Time+2
  2783     00A1  3F43               	moviw [3]fsr1
  2784     00A2  00A3               	movwf	??_get_Delay_Time+3
  2785     00A3  082C               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r,w
  2786     00A4  00A4               	movwf	??_get_Delay_Time+4
  2787     00A5  082D               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r+1,w
  2788     00A6  00A5               	movwf	??_get_Delay_Time+5
  2789     00A7  082E               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r+2,w
  2790     00A8  00A6               	movwf	??_get_Delay_Time+6
  2791     00A9  082F               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r+3,w
  2792     00AA  00A7               	movwf	??_get_Delay_Time+7
  2793     00AB  0820               	movf	??_get_Delay_Time,w
  2794     00AC  02A4               	subwf	??_get_Delay_Time+4,f
  2795     00AD  0821               	movf	??_get_Delay_Time+1,w
  2796     00AE  3BA5               	subwfb	??_get_Delay_Time+5,f
  2797     00AF  0822               	movf	??_get_Delay_Time+2,w
  2798     00B0  3BA6               	subwfb	??_get_Delay_Time+6,f
  2799     00B1  0823               	movf	??_get_Delay_Time+3,w
  2800     00B2  3BA7               	subwfb	??_get_Delay_Time+7,f
  2801     00B3  30FF               	movlw	255
  2802     00B4  0724               	addwf	??_get_Delay_Time+4,w
  2803     00B5  00A8               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r
  2804     00B6  30FF               	movlw	255
  2805     00B7  3D25               	addwfc	??_get_Delay_Time+5,w
  2806     00B8  00A9               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r+1
  2807     00B9  30FF               	movlw	255
  2808     00BA  3D26               	addwfc	??_get_Delay_Time+6,w
  2809     00BB  00AA               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r+2
  2810     00BC  30FF               	movlw	255
  2811     00BD  3D27               	addwfc	??_get_Delay_Time+7,w
  2812     00BE  00AB               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r+3
  2813                           
  2814                           ;SoftDelay.c: 106:     }
  2815     00BF  28E3               	goto	l1050
  2816     00C0                     l1048:
  2817                           
  2818                           ;SoftDelay.c: 108:     {;SoftDelay.c: 109:         v_Time_Diff_Value_u32r = v_Timer_Curr
      +                          entValue_u32r - *v_Timer_StartingValue_u32r;
  2819     00C0  0830               	movf	get_Delay_Time@v_Timer_StartingValue_u32r,w
  2820     00C1  0086               	movwf	6
  2821     00C2  0187               	clrf	7
  2822     00C3  3F40               	moviw [0]fsr1
  2823     00C4  00A0               	movwf	??_get_Delay_Time
  2824     00C5  3F41               	moviw [1]fsr1
  2825     00C6  00A1               	movwf	??_get_Delay_Time+1
  2826     00C7  3F42               	moviw [2]fsr1
  2827     00C8  00A2               	movwf	??_get_Delay_Time+2
  2828     00C9  3F43               	moviw [3]fsr1
  2829     00CA  00A3               	movwf	??_get_Delay_Time+3
  2830     00CB  082C               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r,w
  2831     00CC  00A4               	movwf	??_get_Delay_Time+4
  2832     00CD  082D               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r+1,w
  2833     00CE  00A5               	movwf	??_get_Delay_Time+5
  2834     00CF  082E               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r+2,w
  2835     00D0  00A6               	movwf	??_get_Delay_Time+6
  2836     00D1  082F               	movf	get_Delay_Time@v_Timer_CurrentValue_u32r+3,w
  2837     00D2  00A7               	movwf	??_get_Delay_Time+7
  2838     00D3  0820               	movf	??_get_Delay_Time,w
  2839     00D4  02A4               	subwf	??_get_Delay_Time+4,f
  2840     00D5  0821               	movf	??_get_Delay_Time+1,w
  2841     00D6  3BA5               	subwfb	??_get_Delay_Time+5,f
  2842     00D7  0822               	movf	??_get_Delay_Time+2,w
  2843     00D8  3BA6               	subwfb	??_get_Delay_Time+6,f
  2844     00D9  0823               	movf	??_get_Delay_Time+3,w
  2845     00DA  3BA7               	subwfb	??_get_Delay_Time+7,f
  2846     00DB  0827               	movf	??_get_Delay_Time+7,w
  2847     00DC  00AB               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r+3
  2848     00DD  0826               	movf	??_get_Delay_Time+6,w
  2849     00DE  00AA               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r+2
  2850     00DF  0825               	movf	??_get_Delay_Time+5,w
  2851     00E0  00A9               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r+1
  2852     00E1  0824               	movf	??_get_Delay_Time+4,w
  2853     00E2  00A8               	movwf	get_Delay_Time@v_Time_Diff_Value_u32r
  2854     00E3                     l1050:
  2855                           
  2856                           ;SoftDelay.c: 111:     return v_Time_Diff_Value_u32r;
  2857     00E3  082B               	movf	get_Delay_Time@v_Time_Diff_Value_u32r+3,w
  2858     00E4  00F7               	movwf	?_get_Delay_Time+3
  2859     00E5  082A               	movf	get_Delay_Time@v_Time_Diff_Value_u32r+2,w
  2860     00E6  00F6               	movwf	?_get_Delay_Time+2
  2861     00E7  0829               	movf	get_Delay_Time@v_Time_Diff_Value_u32r+1,w
  2862     00E8  00F5               	movwf	?_get_Delay_Time+1
  2863     00E9  0828               	movf	get_Delay_Time@v_Time_Diff_Value_u32r,w
  2864     00EA  00F4               	movwf	?_get_Delay_Time
  2865     00EB                     l199:
  2866     00EB  0008               	return
  2867     00EC                     __end_of_get_Delay_Time:
  2868                           
  2869                           	psect	text11
  2870     02C1                     __ptext11:	
  2871 ;; *************** function _get_TIMER0Status *****************
  2872 ;; Defined at:
  2873 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  4    0[COMMON] unsigned long 
  2880 ;; Registers used:
  2881 ;;		wreg
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2887 ;;      Params:         4       0       0       0
  2888 ;;      Locals:         0       0       0       0
  2889 ;;      Temps:          0       0       0       0
  2890 ;;      Totals:         4       0       0       0
  2891 ;;Total ram usage:        4 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 4
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_get_Delay_Time
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901     02C1                     _get_TIMER0Status:	
  2902                           ;psect for function _get_TIMER0Status
  2903                           
  2904     02C1                     l1026:	
  2905                           ;incstack = 0
  2906                           ; Regs used in _get_TIMER0Status: [wreg]
  2907                           
  2908                           
  2909                           ;mcc_generated_files/tmr0.c: 111:    return V_COUNTER_1ms;
  2910     02C1  0020               	movlb	0	; select bank0
  2911     02C2  0843               	movf	_V_COUNTER_1ms+3,w
  2912     02C3  00F3               	movwf	?_get_TIMER0Status+3
  2913     02C4  0842               	movf	_V_COUNTER_1ms+2,w
  2914     02C5  00F2               	movwf	?_get_TIMER0Status+2
  2915     02C6  0841               	movf	_V_COUNTER_1ms+1,w
  2916     02C7  00F1               	movwf	?_get_TIMER0Status+1
  2917     02C8  0840               	movf	_V_COUNTER_1ms,w
  2918     02C9  00F0               	movwf	?_get_TIMER0Status
  2919     02CA                     l103:
  2920     02CA  0008               	return
  2921     02CB                     __end_of_get_TIMER0Status:
  2922                           
  2923                           	psect	text12
  2924     0284                     __ptext12:	
  2925 ;; *************** function _SYSTEM_Initialize *****************
  2926 ;; Defined at:
  2927 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2941 ;;      Params:         0       0       0       0
  2942 ;;      Locals:         0       0       0       0
  2943 ;;      Temps:          0       0       0       0
  2944 ;;      Totals:         0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 6
  2948 ;; This function calls:
  2949 ;;		_OSCILLATOR_Initialize
  2950 ;;		_PIN_MANAGER_Initialize
  2951 ;;		_TMR0_Initialize
  2952 ;;		_WDT_Initialize
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958     0284                     _SYSTEM_Initialize:	
  2959                           ;psect for function _SYSTEM_Initialize
  2960                           
  2961     0284                     l1172:	
  2962                           ;incstack = 0
  2963                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2964                           
  2965                           
  2966                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2967     0284  3182  222A  3182   	fcall	_PIN_MANAGER_Initialize
  2968                           
  2969                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2970     0287  3182  22E3  3182   	fcall	_OSCILLATOR_Initialize
  2971                           
  2972                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2973     028A  3182  22FA  3182   	fcall	_WDT_Initialize
  2974                           
  2975                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2976     028D  3182  2291  3182   	fcall	_TMR0_Initialize
  2977     0290                     l19:
  2978     0290  0008               	return
  2979     0291                     __end_of_SYSTEM_Initialize:
  2980                           
  2981                           	psect	text13
  2982     02FA                     __ptext13:	
  2983 ;; *************** function _WDT_Initialize *****************
  2984 ;; Defined at:
  2985 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2999 ;;      Params:         0       0       0       0
  3000 ;;      Locals:         0       0       0       0
  3001 ;;      Temps:          0       0       0       0
  3002 ;;      Totals:         0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 4
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_SYSTEM_Initialize
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013     02FA                     _WDT_Initialize:	
  3014                           ;psect for function _WDT_Initialize
  3015                           
  3016     02FA                     l1090:	
  3017                           ;incstack = 0
  3018                           ; Regs used in _WDT_Initialize: [wreg]
  3019                           
  3020                           
  3021                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  3022     02FA  3016               	movlw	22
  3023     02FB  0021               	movlb	1	; select bank1
  3024     02FC  0097               	movwf	23	;volatile
  3025     02FD                     l25:
  3026     02FD  0008               	return
  3027     02FE                     __end_of_WDT_Initialize:
  3028                           
  3029                           	psect	text14
  3030     0291                     __ptext14:	
  3031 ;; *************** function _TMR0_Initialize *****************
  3032 ;; Defined at:
  3033 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3047 ;;      Params:         0       0       0       0
  3048 ;;      Locals:         0       0       0       0
  3049 ;;      Temps:          0       0       0       0
  3050 ;;      Totals:         0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 4
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_SYSTEM_Initialize
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061     0291                     _TMR0_Initialize:	
  3062                           ;psect for function _TMR0_Initialize
  3063                           
  3064     0291                     l1092:	
  3065                           ;incstack = 0
  3066                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3067                           
  3068                           
  3069                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD3 
      +                          & 0x3F));
  3070     0291  0021               	movlb	1	; select bank1
  3071     0292  0815               	movf	21,w	;volatile
  3072     0293  39C0               	andlw	192
  3073     0294  3813               	iorlw	19
  3074     0295  0095               	movwf	21	;volatile
  3075     0296                     l1094:
  3076                           
  3077                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  3078     0296  3006               	movlw	6
  3079     0297  0020               	movlb	0	; select bank0
  3080     0298  0095               	movwf	21	;volatile
  3081     0299                     l1096:
  3082                           
  3083                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  3084     0299  3006               	movlw	6
  3085     029A  00D4               	movwf	_timer0ReloadVal	;volatile
  3086     029B                     l1098:
  3087                           
  3088                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3089     029B  110B               	bcf	11,2	;volatile
  3090     029C                     l1100:
  3091                           
  3092                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  3093     029C  168B               	bsf	11,5	;volatile
  3094     029D                     l91:
  3095     029D  0008               	return
  3096     029E                     __end_of_TMR0_Initialize:
  3097                           
  3098                           	psect	text15
  3099     022A                     __ptext15:	
  3100 ;; *************** function _PIN_MANAGER_Initialize *****************
  3101 ;; Defined at:
  3102 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0, pclath, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3116 ;;      Params:         0       0       0       0
  3117 ;;      Locals:         0       0       0       0
  3118 ;;      Temps:          0       0       0       0
  3119 ;;      Totals:         0       0       0       0
  3120 ;;Total ram usage:        0 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 5
  3123 ;; This function calls:
  3124 ;;		_IOCAF0_SetInterruptHandler
  3125 ;; This function is called by:
  3126 ;;		_SYSTEM_Initialize
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130     022A                     _PIN_MANAGER_Initialize:	
  3131                           ;psect for function _PIN_MANAGER_Initialize
  3132                           
  3133     022A                     l1060:	
  3134                           ;incstack = 0
  3135                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3136                           
  3137                           
  3138                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  3139     022A  0022               	movlb	2	; select bank2
  3140     022B  018C               	clrf	12	;volatile
  3141     022C                     l1062:
  3142                           
  3143                           ;mcc_generated_files/pin_manager.c: 70:      TRISA = 0x09;
  3144     022C  3009               	movlw	9
  3145     022D  0021               	movlb	1	; select bank1
  3146     022E  008C               	movwf	12	;volatile
  3147     022F                     l1064:
  3148                           
  3149                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x02;
  3150     022F  3002               	movlw	2
  3151     0230  0023               	movlb	3	; select bank3
  3152     0231  008C               	movwf	12	;volatile
  3153                           
  3154                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  3155     0232  0024               	movlb	4	; select bank4
  3156     0233  018C               	clrf	12	;volatile
  3157     0234                     l1066:
  3158                           
  3159                           ;mcc_generated_files/pin_manager.c: 81:     OPTION_REGbits.nWPUEN = 1;
  3160     0234  0021               	movlb	1	; select bank1
  3161     0235  1795               	bsf	21,7	;volatile
  3162                           
  3163                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  3164     0236  0025               	movlb	5	; select bank5
  3165     0237  018C               	clrf	12	;volatile
  3166     0238                     l1068:
  3167                           
  3168                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONA = 0x37;
  3169     0238  3037               	movlw	55
  3170     0239  0026               	movlb	6	; select bank6
  3171     023A  008C               	movwf	12	;volatile
  3172     023B                     l1070:
  3173                           
  3174                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3175     023B  303F               	movlw	63
  3176     023C  0027               	movlb	7	; select bank7
  3177     023D  008C               	movwf	12	;volatile
  3178     023E                     l1072:
  3179                           
  3180                           ;mcc_generated_files/pin_manager.c: 101:     APFCON = 0x04;
  3181     023E  3004               	movlw	4
  3182     023F  0022               	movlb	2	; select bank2
  3183     0240  009D               	movwf	29	;volatile
  3184     0241                     l1074:
  3185                           
  3186                           ;mcc_generated_files/pin_manager.c: 114:     IOCAFbits.IOCAF0 = 0;
  3187     0241  0027               	movlb	7	; select bank7
  3188     0242  1013               	bcf	19,0	;volatile
  3189     0243                     l1076:
  3190                           
  3191                           ;mcc_generated_files/pin_manager.c: 116:     IOCANbits.IOCAN0 = 1;
  3192     0243  1412               	bsf	18,0	;volatile
  3193     0244                     l1078:
  3194                           
  3195                           ;mcc_generated_files/pin_manager.c: 118:     IOCAPbits.IOCAP0 = 0;
  3196     0244  1011               	bcf	17,0	;volatile
  3197     0245                     l1080:
  3198                           
  3199                           ;mcc_generated_files/pin_manager.c: 123:     IOCAF0_SetInterruptHandler(IOCAF0_DefaultIn
      +                          terruptHandler);
  3200     0245  30FE               	movlw	low _IOCAF0_DefaultInterruptHandler
  3201     0246  00F0               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler
  3202     0247  3002               	movlw	high _IOCAF0_DefaultInterruptHandler
  3203     0248  00F1               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler+1
  3204     0249  3182  22F0  3182   	fcall	_IOCAF0_SetInterruptHandler
  3205     024C                     l1082:
  3206                           
  3207                           ;mcc_generated_files/pin_manager.c: 127:     INTCONbits.IOCIE = 1;
  3208     024C  158B               	bsf	11,3	;volatile
  3209     024D                     l64:
  3210     024D  0008               	return
  3211     024E                     __end_of_PIN_MANAGER_Initialize:
  3212                           
  3213                           	psect	text16
  3214     02F0                     __ptext16:	
  3215 ;; *************** function _IOCAF0_SetInterruptHandler *****************
  3216 ;; Defined at:
  3217 ;;		line 158 in file "mcc_generated_files/pin_manager.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  3220 ;;		 -> IOCAF0_DefaultInterruptHandler(1), 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3232 ;;      Params:         2       0       0       0
  3233 ;;      Locals:         0       0       0       0
  3234 ;;      Temps:          0       0       0       0
  3235 ;;      Totals:         2       0       0       0
  3236 ;;Total ram usage:        2 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 4
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_PIN_MANAGER_Initialize
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246     02F0                     _IOCAF0_SetInterruptHandler:	
  3247                           ;psect for function _IOCAF0_SetInterruptHandler
  3248                           
  3249     02F0                     l1034:	
  3250                           ;incstack = 0
  3251                           ; Regs used in _IOCAF0_SetInterruptHandler: [wreg]
  3252                           
  3253                           
  3254                           ;mcc_generated_files/pin_manager.c: 159:     IOCAF0_InterruptHandler = InterruptHandler;
  3255     02F0  0871               	movf	IOCAF0_SetInterruptHandler@InterruptHandler+1,w
  3256     02F1  0020               	movlb	0	; select bank0
  3257     02F2  00D3               	movwf	_IOCAF0_InterruptHandler+1
  3258     02F3  0870               	movf	IOCAF0_SetInterruptHandler@InterruptHandler,w
  3259     02F4  00D2               	movwf	_IOCAF0_InterruptHandler
  3260     02F5                     l75:
  3261     02F5  0008               	return
  3262     02F6                     __end_of_IOCAF0_SetInterruptHandler:
  3263                           
  3264                           	psect	text17
  3265     02E3                     __ptext17:	
  3266 ;; *************** function _OSCILLATOR_Initialize *****************
  3267 ;; Defined at:
  3268 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3282 ;;      Params:         0       0       0       0
  3283 ;;      Locals:         0       0       0       0
  3284 ;;      Temps:          0       0       0       0
  3285 ;;      Totals:         0       0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 4
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_SYSTEM_Initialize
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296     02E3                     _OSCILLATOR_Initialize:	
  3297                           ;psect for function _OSCILLATOR_Initialize
  3298                           
  3299     02E3                     l1084:	
  3300                           ;incstack = 0
  3301                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3302                           
  3303                           
  3304                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x7A;
  3305     02E3  307A               	movlw	122
  3306     02E4  0021               	movlb	1	; select bank1
  3307     02E5  0099               	movwf	25	;volatile
  3308     02E6                     l1086:
  3309                           
  3310                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  3311     02E6  0198               	clrf	24	;volatile
  3312     02E7                     l1088:
  3313                           
  3314                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  3315     02E7  0022               	movlb	2	; select bank2
  3316     02E8  0196               	clrf	22	;volatile
  3317     02E9                     l22:
  3318     02E9  0008               	return
  3319     02EA                     __end_of_OSCILLATOR_Initialize:
  3320                           
  3321                           	psect	intentry
  3322     0004                     __pintentry:	
  3323 ;; *************** function _INTERRUPT_InterruptManager *****************
  3324 ;; Defined at:
  3325 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0, pclath, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3339 ;;      Params:         0       0       0       0
  3340 ;;      Locals:         0       0       0       0
  3341 ;;      Temps:          0       0       0       0
  3342 ;;      Totals:         0       0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 3
  3346 ;; This function calls:
  3347 ;;		_PIN_MANAGER_IOC
  3348 ;;		_TMR0_ISR
  3349 ;; This function is called by:
  3350 ;;		Interrupt level 1
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354     0004                     _INTERRUPT_InterruptManager:
  3355                           
  3356                           ;incstack = 0
  3357     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3358                           
  3359                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3360     0005  3180               	pagesel	$
  3361     0006                     i1l1214:
  3362                           
  3363                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  3364     0006  1E8B               	btfss	11,5	;volatile
  3365     0007  2809               	goto	u48_21
  3366     0008  280A               	goto	u48_20
  3367     0009                     u48_21:
  3368     0009  2812               	goto	i1l117
  3369     000A                     u48_20:
  3370     000A                     i1l1216:
  3371     000A  1D0B               	btfss	11,2	;volatile
  3372     000B  280D               	goto	u49_21
  3373     000C  280E               	goto	u49_20
  3374     000D                     u49_21:
  3375     000D  2812               	goto	i1l117
  3376     000E                     u49_20:
  3377     000E                     i1l1218:
  3378                           
  3379                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  3380     000E  3182  22B6  3180   	fcall	_TMR0_ISR
  3381                           
  3382                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  3383     0011  281D               	goto	i1l120
  3384     0012                     i1l117:	
  3385                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  3386                           
  3387     0012  1D8B               	btfss	11,3	;volatile
  3388     0013  2815               	goto	u50_21
  3389     0014  2816               	goto	u50_20
  3390     0015                     u50_21:
  3391     0015  281D               	goto	i1l120
  3392     0016                     u50_20:
  3393     0016                     i1l1220:
  3394     0016  1C0B               	btfss	11,0	;volatile
  3395     0017  2819               	goto	u51_21
  3396     0018  281A               	goto	u51_20
  3397     0019                     u51_21:
  3398     0019  281D               	goto	i1l120
  3399     001A                     u51_20:
  3400     001A                     i1l1222:
  3401                           
  3402                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  3403     001A  3182  22CB  3180   	fcall	_PIN_MANAGER_IOC
  3404     001D                     i1l120:
  3405     001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3406     001E  0009               	retfie
  3407     001F                     __end_of_INTERRUPT_InterruptManager:
  3408                           
  3409                           	psect	text19
  3410     02B6                     __ptext19:	
  3411 ;; *************** function _TMR0_ISR *****************
  3412 ;; Defined at:
  3413 ;;		line 114 in file "mcc_generated_files/tmr0.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3427 ;;      Params:         0       0       0       0
  3428 ;;      Locals:         0       0       0       0
  3429 ;;      Temps:          0       0       0       0
  3430 ;;      Totals:         0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_INTERRUPT_InterruptManager
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440     02B6                     _TMR0_ISR:	
  3441                           ;psect for function _TMR0_ISR
  3442                           
  3443     02B6                     i1l1178:	
  3444                           ;incstack = 0
  3445                           ; Regs used in _TMR0_ISR: [wreg]
  3446                           
  3447                           
  3448                           ;mcc_generated_files/tmr0.c: 116:      V_COUNTER_1ms++;
  3449     02B6  3001               	movlw	1
  3450     02B7  0020               	movlb	0	; select bank0
  3451     02B8  07C0               	addwf	_V_COUNTER_1ms,f
  3452     02B9  3000               	movlw	0
  3453     02BA  3DC1               	addwfc	_V_COUNTER_1ms+1,f
  3454     02BB  3000               	movlw	0
  3455     02BC  3DC2               	addwfc	_V_COUNTER_1ms+2,f
  3456     02BD  3000               	movlw	0
  3457     02BE  3DC3               	addwfc	_V_COUNTER_1ms+3,f
  3458     02BF                     i1l1180:
  3459                           
  3460                           ;mcc_generated_files/tmr0.c: 119:     INTCONbits.TMR0IF = 0;
  3461     02BF  110B               	bcf	11,2	;volatile
  3462     02C0                     i1l106:
  3463     02C0  0008               	return
  3464     02C1                     __end_of_TMR0_ISR:
  3465                           
  3466                           	psect	text20
  3467     02CB                     __ptext20:	
  3468 ;; *************** function _PIN_MANAGER_IOC *****************
  3469 ;; Defined at:
  3470 ;;		line 131 in file "mcc_generated_files/pin_manager.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3484 ;;      Params:         0       0       0       0
  3485 ;;      Locals:         0       0       0       0
  3486 ;;      Temps:          0       0       0       0
  3487 ;;      Totals:         0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 2
  3491 ;; This function calls:
  3492 ;;		_IOCAF0_ISR
  3493 ;; This function is called by:
  3494 ;;		_INTERRUPT_InterruptManager
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498     02CB                     _PIN_MANAGER_IOC:	
  3499                           ;psect for function _PIN_MANAGER_IOC
  3500                           
  3501     02CB                     i1l1174:	
  3502                           ;incstack = 0
  3503                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  3504                           
  3505                           
  3506                           ;mcc_generated_files/pin_manager.c: 134:     if(IOCAFbits.IOCAF0 == 1)
  3507     02CB  0027               	movlb	7	; select bank7
  3508     02CC  1C13               	btfss	19,0	;volatile
  3509     02CD  2ACF               	goto	u43_21
  3510     02CE  2AD0               	goto	u43_20
  3511     02CF                     u43_21:
  3512     02CF  2AD3               	goto	i1l68
  3513     02D0                     u43_20:
  3514     02D0                     i1l1176:
  3515                           
  3516                           ;mcc_generated_files/pin_manager.c: 135:     {;mcc_generated_files/pin_manager.c: 136:  
      +                                 IOCAF0_ISR();
  3517     02D0  3182  2273  3182   	fcall	_IOCAF0_ISR
  3518     02D3                     i1l68:
  3519     02D3  0008               	return
  3520     02D4                     __end_of_PIN_MANAGER_IOC:
  3521                           
  3522                           	psect	text21
  3523     0273                     __ptext21:	
  3524 ;; *************** function _IOCAF0_ISR *****************
  3525 ;; Defined at:
  3526 ;;		line 143 in file "mcc_generated_files/pin_manager.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, pclath, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3540 ;;      Params:         0       0       0       0
  3541 ;;      Locals:         0       0       0       0
  3542 ;;      Temps:          0       0       0       0
  3543 ;;      Totals:         0       0       0       0
  3544 ;;Total ram usage:        0 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 1
  3547 ;; This function calls:
  3548 ;;		Absolute function
  3549 ;;		_IOCAF0_DefaultInterruptHandler
  3550 ;; This function is called by:
  3551 ;;		_PIN_MANAGER_IOC
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555     0273                     _IOCAF0_ISR:	
  3556                           ;psect for function _IOCAF0_ISR
  3557                           
  3558     0273                     i1l1102:	
  3559                           ;incstack = 0
  3560                           ; Regs used in _IOCAF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3561                           
  3562                           
  3563                           ;mcc_generated_files/pin_manager.c: 146:     Flag_FreCounter = 1;
  3564     0273  0020               	movlb	0	; select bank0
  3565     0274  01C5               	clrf	_Flag_FreCounter
  3566     0275  0AC5               	incf	_Flag_FreCounter,f
  3567     0276                     i1l1104:
  3568                           
  3569                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCAF0_InterruptHandler)
  3570     0276  0852               	movf	_IOCAF0_InterruptHandler,w
  3571     0277  0453               	iorwf	_IOCAF0_InterruptHandler+1,w
  3572     0278  1903               	btfsc	3,2
  3573     0279  2A7B               	goto	u34_21
  3574     027A  2A7C               	goto	u34_20
  3575     027B                     u34_21:
  3576     027B  2A81               	goto	i1l1108
  3577     027C                     u34_20:
  3578     027C                     i1l1106:
  3579                           
  3580                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCAF0_InterruptHandler();
  3581     027C  0853               	movf	_IOCAF0_InterruptHandler+1,w
  3582     027D  008A               	movwf	10
  3583     027E  0852               	movf	_IOCAF0_InterruptHandler,w
  3584     027F  000A               	callw
  3585     0280  3182               	pagesel	$
  3586     0281                     i1l1108:
  3587                           
  3588                           ;mcc_generated_files/pin_manager.c: 152:     IOCAFbits.IOCAF0 = 0;
  3589     0281  0027               	movlb	7	; select bank7
  3590     0282  1013               	bcf	19,0	;volatile
  3591     0283                     i1l72:
  3592     0283  0008               	return
  3593     0284                     __end_of_IOCAF0_ISR:
  3594                           
  3595                           	psect	text22
  3596     02FE                     __ptext22:	
  3597 ;; *************** function _IOCAF0_DefaultInterruptHandler *****************
  3598 ;; Defined at:
  3599 ;;		line 165 in file "mcc_generated_files/pin_manager.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		None
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3613 ;;      Params:         0       0       0       0
  3614 ;;      Locals:         0       0       0       0
  3615 ;;      Temps:          0       0       0       0
  3616 ;;      Totals:         0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_PIN_MANAGER_Initialize
  3623 ;;		_IOCAF0_ISR
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627     02FE                     _IOCAF0_DefaultInterruptHandler:	
  3628                           ;psect for function _IOCAF0_DefaultInterruptHandler
  3629                           
  3630     02FE                     i1l78:	
  3631                           ;incstack = 0
  3632                           ; Regs used in _IOCAF0_DefaultInterruptHandler: []
  3633                           
  3634     02FE  0008               	return
  3635     02FF                     __end_of_IOCAF0_DefaultInterruptHandler:
  3636     007E                     btemp	set	126	;btemp
  3637     007E                     int$flags	set	126
  3638     007E                     wtemp0	set	126
  3639                           
  3640                           	psect	idloc
  3641                           
  3642                           ;Config register IDLOC0 @ 0x8000
  3643                           ;	unspecified, using default values
  3644     8000                     	org	32768
  3645     8000  3FFF               	dw	16383
  3646                           
  3647                           ;Config register IDLOC1 @ 0x8001
  3648                           ;	unspecified, using default values
  3649     8001                     	org	32769
  3650     8001  3FFF               	dw	16383
  3651                           
  3652                           ;Config register IDLOC2 @ 0x8002
  3653                           ;	unspecified, using default values
  3654     8002                     	org	32770
  3655     8002  3FFF               	dw	16383
  3656                           
  3657                           ;Config register IDLOC3 @ 0x8003
  3658                           ;	unspecified, using default values
  3659     8003                     	org	32771
  3660     8003  3FFF               	dw	16383
  3661                           
  3662                           	psect	config
  3663                           
  3664                           ;Config register CONFIG1 @ 0x8007
  3665                           ;	
  3666                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  3667                           ;	Watchdog Timer Enable
  3668                           ;	WDTE = OFF, WDT disabled
  3669                           ;	Power-up Timer Enable
  3670                           ;	PWRTE = OFF, PWRT disabled
  3671                           ;	MCLR Pin Function Select
  3672                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  3673                           ;	Flash Program Memory Code Protection
  3674                           ;	CP = OFF, Program memory code protection is disabled
  3675                           ;	Brown-out Reset Enable
  3676                           ;	BOREN = ON, Brown-out Reset enabled
  3677                           ;	Clock Out Enable
  3678                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3679     8007                     	org	32775
  3680     8007  3FA4               	dw	16292
  3681                           
  3682                           ;Config register CONFIG2 @ 0x8008
  3683                           ;	Flash Memory Self-Write Protection
  3684                           ;	WRT = OFF, Write protection off
  3685                           ;	PLL Enable
  3686                           ;	PLLEN = ON, 4x PLL enabled
  3687                           ;	Stack Overflow/Underflow Reset Enable
  3688                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3689                           ;	Brown-out Reset Voltage Selection
  3690                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3691                           ;	Low Power Brown-out Reset enable bit
  3692                           ;	LPBOREN = OFF, LPBOR is disabled
  3693                           ;	Low-Voltage Programming Enable
  3694                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3695     8008                     	org	32776
  3696     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         22
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      53
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    get_Delay_Time@v_Timer_StartingValue_u32r	PTR unsigned long  size(1) Largest target is 4
		 -> time_Scanning_Period(BANK0[4]), time_EEPROM_WRITE_Period(BANK0[4]), 

    get_DelayStatus@v_TimerStartingValue_u32r	PTR unsigned long  size(1) Largest target is 4
		 -> time_Scanning_Period(BANK0[4]), time_EEPROM_WRITE_Period(BANK0[4]), 

    IOCAF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF0_DefaultInterruptHandler(), 

    IOCAF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_get_DelayStatus
    _old_light_status->_ReadWrite_HEFlash
    _ReadWrite_HEFlash->_Read_FLASH
    _Sensing_Receiver->_get_DelayStatus
    _get_DelayStatus->_get_Delay_Time
    _get_Delay_Time->_get_TIMER0Status
    _PIN_MANAGER_Initialize->_IOCAF0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_DelayStatus
    _Sensing_Receiver->_get_DelayStatus
    _get_DelayStatus->_get_Delay_Time

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2711
                                             22 BANK0      2     2      0
                      _LIGHT_Trigger
                  _ReadWrite_HEFlash
                  _SYSTEM_Initialize
                   _Sensing_Receiver
                 _Sensing_Validation
                    _get_DelayStatus
                   _old_light_status
 ---------------------------------------------------------------------------------
 (1) _old_light_status                                     1     1      0     740
                                             11 COMMON     1     1      0
                      _LIGHT_Trigger
                  _ReadWrite_HEFlash
 ---------------------------------------------------------------------------------
 (2) _ReadWrite_HEFlash                                    9     6      3     673
                                              2 COMMON     9     6      3
                         _Read_FLASH
                       _Unlock_FLASH
                        _Write_FLASH
 ---------------------------------------------------------------------------------
 (3) _Write_FLASH                                          0     0      0       0
                       _Unlock_FLASH
 ---------------------------------------------------------------------------------
 (4) _Unlock_FLASH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Read_FLASH                                           2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _LIGHT_Trigger                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Sensing_Validation                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Sensing_Receiver                                     0     0      0     542
                    _get_DelayStatus
 ---------------------------------------------------------------------------------
 (1) _get_DelayStatus                                     11     9      2     542
                                              8 COMMON     6     4      2
                                             17 BANK0      5     5      0
                     _get_Delay_Time
 ---------------------------------------------------------------------------------
 (2) _get_Delay_Time                                      21    17      4     235
                                              4 COMMON     4     0      4
                                              0 BANK0     17    17      0
                   _get_TIMER0Status
 ---------------------------------------------------------------------------------
 (3) _get_TIMER0Status                                     4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCAF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF0_SetInterruptHandler                           2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF0_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCAF0_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCAF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIGHT_Trigger
   _ReadWrite_HEFlash
     _Read_FLASH
     _Unlock_FLASH
     _Write_FLASH
       _Unlock_FLASH
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF0_SetInterruptHandler
     _TMR0_Initialize
     _WDT_Initialize
   _Sensing_Receiver
     _get_DelayStatus
       _get_Delay_Time
         _get_TIMER0Status
   _Sensing_Validation
   _get_DelayStatus
   _old_light_status
     _LIGHT_Trigger
     _ReadWrite_HEFlash

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF0_ISR
       Absolute function(Fake) *
       _IOCAF0_DefaultInterruptHandler *
   _TMR0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      43       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      43      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 05 15:30:16 2025

                           _get_DelayStatus 01F7                                          l22 02E9  
                                        l25 02FD                                          l19 0290  
                                        l64 024D                                          l75 02F5  
                                        l91 029D                                          _RD 0CA8  
                                        _WR 0CA9                             _timer0ReloadVal 0054  
                        _Sensing_Validation 024E                                         l103 02CA  
                                       l160 018E                                         l170 01CF  
                                       l242 0160                                         l251 02B5  
                                       l172 01F6                                         l180 02DB  
                                       l260 02E2                                         l237 0140  
                                       l254 02A4                                         l191 0229  
                                       l183 0272                                         l176 0261  
                                       l248 02B1                                         l256 02A8  
                                       l257 02A9                                         l199 00EB  
                                       _GIE 005F                                         u300 02A8  
                                       u301 02A7                                         u310 0050  
                                       u311 004F                                         u320 0098  
                                       u400 0145                                         u321 0097  
                                       u401 0144                                         u330 02B5  
                                       u410 014B                                         u331 02B4  
                                       u411 014A                                         u420 0159  
                                       u325 0094                                         u421 0158  
                                       u350 021E                                         u351 021D  
                                       u440 01BF                                         u360 00F2  
                                       u520 0171                                         u441 01BE  
                                       u361 00F1                                         u521 016F  
                                       u450 01C7                                         u370 010B  
                                       u530 0172                                         u355 021A  
                                       u451 01C6                                         u371 010A  
                                       u460 01E5                                         u380 0112  
                                       u540 017F                                         u461 01E4  
                                       u381 0111                                         u541 017E  
                                       u470 025E                                         u390 0129  
                                       u550 0185                                         u471 025D  
                                       u391 0128                                         u551 0184  
                                       u560 018A                                         u561 0189  
                                       u570 019C                                         u571 019B  
                                       u580 01AC                                         u581 01AB  
                                       wreg 0009                         ?_Sensing_Validation 0070  
                                      l1100 029C                                        l1110 02D5  
                                      l1030 029E                                        l1040 006F  
                                      l1112 01F9                                        l1200 024E  
                                      l1032 02A3                                        l1034 02F0  
                                      l1026 02C1                                        l1050 00E3  
                                      l1114 0206                                        l1202 025E  
                                      l1130 00F2                                        l1060 022A  
                                      l1044 007B                                        l1036 003D  
                                      l1116 021E                                        l1124 0228  
                                      l1140 00FF                                        l1132 00F7  
                                      l1070 023B                                        l1062 022C  
                                      l1046 0098                                        l1038 0050  
                                      l1118 0226                                        l1054 02AA  
                                      l1150 011F                                        l1142 0106  
                                      l1134 00FD                                        l1230 0166  
                                      l1080 0245                                        l1072 023E  
                                      l1064 022F                                        l1048 00C0  
                                      l1208 0260                                        l1056 02DC  
                                      l1160 014B                                        l1152 0129  
                                      l1144 010B                                        l1128 00ED  
                                      l1240 0185                                        l1232 0168  
                                      l1224 0161                                        l1082 024C  
                                      l1074 0241                                        l1066 0234  
                                      l1090 02FA                                        l1058 02DF  
                                      l1162 014E                                        l1154 012F  
                                      l1146 0112                                        l1250 019C  
                                      l1242 018A                                        l1234 0174  
                                      l1226 0164                                        l1084 02E3  
                                      l1076 0243                                        l1068 0238  
                                      l1092 0291                                        l1172 0284  
                                      l1156 0132                                        l1164 0152  
                                      l1148 011B                                        l1252 019F  
                                      l1244 018D                                        l1236 0177  
                                      l1228 0165                                        l1086 02E6  
                                      l1078 0244                                        l1094 0296  
                                      l1190 01BF                                        l1166 0154  
                                      l1158 0145                                        l1182 0262  
                                      l1254 01AC                                        l1246 018F  
                                      l1238 017F                                        l1088 02E7  
                                      l1096 0299                                        l1192 01C7  
                                      l1168 0159                                        l1184 0271  
                                      l1248 0194                                        l1098 029B  
                                      l1194 01D7                                        l1196 01D8  
                                      l1188 01B9                                        l1198 01E5  
                                      _LATA 010C                                        i1l72 0283  
                                      i1l68 02D3                                        i1l78 02FE  
                                      _TMR0 0015                                        _WREN 0CAA  
                                      _WPUA 020C                                        _main 0161  
                             _LIGHT_Trigger 02D4                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        fsr1l 0006  
                                      btemp 007E                                        start 001F  
                         ?_get_TIMER0Status 0070                        ??_Sensing_Validation 0070  
      get_Delay_Time@v_Time_Diff_Value_u32r 0028                          ??_get_TIMER0Status 0074  
                   __end_of_TMR0_Initialize 029E                                       PMDATH 0194  
             __end_of_OSCILLATOR_Initialize 02EA                                       ?_main 0070  
         old_light_status@V_light_status_on 007B                                       i1l120 001D  
                                     i1l106 02C0                                       i1l117 0012  
                                     _PMADR 0191                                       _PMDAT 0193  
                                     u34_20 027C                                       u50_20 0016  
                                     u34_21 027B                                       u50_21 0015  
                                     u43_20 02D0                                       u51_20 001A  
                                     u43_21 02CF                                       u51_21 0019  
                                     u48_20 000A                                       u48_21 0009  
                                     u49_20 000E                                       u49_21 000D  
                                     _TRISA 008C                            __end_of_TMR0_ISR 02C1  
                   __end_of_PIN_MANAGER_IOC 02D4                              _WDT_Initialize 02FA  
                                     pclath 000A                              ?_LIGHT_Trigger 0070  
                                     status 0003                                       wtemp0 007E  
                   __end_of_get_DelayStatus 022A                                  _Read_FLASH 02AA  
                           __initialization 0020                                __end_of_main 01B9  
               ?_INTERRUPT_InterruptManager 0070                                      ??_main 007E  
                    __end_of_WDT_Initialize 02FE                ??_IOCAF0_SetInterruptHandler 0072  
                                    _APFCON 011D                                      _ANSELA 018C  
                                    _BORCON 0116                                      i1l1102 0273  
                                    i1l1104 0276                                      i1l1106 027C  
                                    i1l1108 0281                                      i1l1220 0016  
                                    i1l1222 001A                                      i1l1214 0006  
                                    i1l1216 000A                                      i1l1218 000E  
                                    i1l1180 02BF                                      i1l1174 02CB  
                                    i1l1176 02D0                                      _ODCONA 028C  
                                    i1l1178 02B6                                      _INLVLA 038C  
                                    _INTCON 000B                                      _PMDATH 0194  
                                    _PMCON1 0195                                      _PMCON2 0196  
                                    _OSCCON 0099                             _Flag_FreCounter 0045  
                                    _WDTCON 0097                         LIGHT_Trigger@Status 0070  
                          ?_TMR0_Initialize 0070                    __end_of_Sensing_Receiver 01F7  
                           ?_WDT_Initialize 0070  IOCAF0_SetInterruptHandler@InterruptHandler 0070  
                          ?_PIN_MANAGER_IOC 0070                                ??_IOCAF0_ISR 0070  
                           ??_LIGHT_Trigger 0070                           _SYSTEM_Initialize 0284  
                       ReadWrite_HEFlash@rw 0079                     __end_of__initialization 0038  
                          ?_get_DelayStatus 0078                          ?_SYSTEM_Initialize 0070  
                               ?_Read_FLASH 0070                              __pcstackCOMMON 0070  
                              __pidataBANK0 02F6                         ??_SYSTEM_Initialize 0072  
                                 ?_TMR0_ISR 0070                          __end_of_IOCAF0_ISR 0284  
                            _OPTION_REGbits 0095                   __end_of_SYSTEM_Initialize 0291  
                                __pbssBANK0 0038                                  __pmaintext 0161  
                             ??_Write_FLASH 0070                                  ??_TMR0_ISR 0070  
                                __pintentry 0004                           Read_FLASH@address 0070  
        __end_of_IOCAF0_SetInterruptHandler 02F6                  _IOCAF0_SetInterruptHandler 02F0  
                                   _OSCTUNE 0098                                     _SLRCONA 030C  
                                   _SaveInt 0044                               _V_COUNTER_1ms 0040  
                                   __ptext1 0262                                     __ptext2 00EC  
                                   __ptext3 02DC                                     __ptext4 029E  
                                   __ptext5 02AA                                     __ptext6 02D4  
                                   __ptext7 024E                                     __ptext8 01B9  
                                   __ptext9 01F7                         __end_of_Write_FLASH 02E3  
                     _OSCILLATOR_Initialize 02E3                    ??_PIN_MANAGER_Initialize 0072  
                                 _IOCAFbits 0393                                   _IOCANbits 0392  
                                 _IOCAPbits 0391                                     clrloop0 02EB  
                      end_of_initialization 0038                            _V_Freequency_u32 0038  
                          _old_light_status 0262                            ??_WDT_Initialize 0070  
                   _IOCAF0_InterruptHandler 0052                           _ReadWrite_HEFlash 00EC  
                             ?_Unlock_FLASH 0070                        ReadWrite_HEFlash@cnt 007A  
                         ?_Sensing_Receiver 0070                              _get_Delay_Time 003B  
                        ?_ReadWrite_HEFlash 0072                          ??_Sensing_Receiver 007E  
                       ??_ReadWrite_HEFlash 0075     get_Delay_Time@v_Timer_CurrentValue_u32r 002C  
                              ??_Read_FLASH 0072                                 _Write_FLASH 02DC  
                    ?_OSCILLATOR_Initialize 0070                   __end_of_ReadWrite_HEFlash 0161  
                    __end_of_get_Delay_Time 00EC                            _get_TIMER0Status 02C1  
                            ??_Unlock_FLASH 0070                         start_initialization 0020  
             ReadWrite_HEFlash@rowstartaddr 0073                          __end_of_Read_FLASH 02B6  
                     __end_of_LIGHT_Trigger 02DC             get_DelayStatus@v_TimeDelay_u16r 0078  
                               __pdataBANK0 004E            ??_IOCAF0_DefaultInterruptHandler 0070  
           ?_IOCAF0_DefaultInterruptHandler 0070                             ?_get_Delay_Time 0074  
                                 ___latbits 0000                 ?_IOCAF0_SetInterruptHandler 0070  
                             __pcstackBANK0 0020                                   __pnvBANK0 0052  
  get_Delay_Time@v_Timer_StartingValue_u32r 0030                      _PIN_MANAGER_Initialize 022A  
              ??_INTERRUPT_InterruptManager 0070                     main@V_Keypad_Long_Press 0036  
                         main@V_LightStatus 0037  get_DelayStatus@v_TimeDifference_Value_u32r 0031  
                  __end_of_old_light_status 0273                           ??_TMR0_Initialize 0070  
                                  _LATAbits 010C                                   clear_ram0 02EA  
                __end_of_Sensing_Validation 0262                        __end_of_Unlock_FLASH 02AA  
                                  _TMR0_ISR 02B6                           ??_PIN_MANAGER_IOC 0070  
                         ??_get_DelayStatus 007A                     _V_FreequencyCounter_u32 003C  
                  __end_of_get_TIMER0Status 02CB                                ?_Write_FLASH 0070  
                   ??_OSCILLATOR_Initialize 0070                    _time_EEPROM_WRITE_Period 0046  
  get_DelayStatus@v_TimerStartingValue_u32r 0035                                    __ptext10 003B  
                                  __ptext11 02C1                                    __ptext20 02CB  
                                  __ptext12 0284                                    __ptext21 0273  
                                  __ptext13 02FA                                    __ptext22 02FE  
                                  __ptext14 0291                                    __ptext15 022A  
                                  __ptext16 02F0                                    __ptext17 02E3  
                                  __ptext19 02B6                                  _IOCAF0_ISR 0273  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 001F  
                _INTERRUPT_InterruptManager 0004                            ??_get_Delay_Time 0020  
                                _INTCONbits 000B                  _time_Scanning_Period_count 0050  
                                  intlevel1 0000      __end_of_IOCAF0_DefaultInterruptHandler 02FF  
            _IOCAF0_DefaultInterruptHandler 02FE                     _time_EEPROM_WRITE_count 004E  
                   ?_PIN_MANAGER_Initialize 0070                        _time_Scanning_Period 004A  
                                _OPTION_REG 0095                             _TMR0_Initialize 0291  
                              _Unlock_FLASH 029E                                 ?_IOCAF0_ISR 0070  
            __end_of_PIN_MANAGER_Initialize 024E                           ?_old_light_status 0070  
                           _PIN_MANAGER_IOC 02CB                          ??_old_light_status 007B  
                          _Sensing_Receiver 01B9                       ReadWrite_HEFlash@addr 0077  
                     ReadWrite_HEFlash@data 0072  
